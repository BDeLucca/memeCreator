{"version":3,"sources":["components/MemeEditor/TextImage/index.module.css","components/IntroPage/intropage.module.css","components/IntroPage/memeTextInside.jpg","components/IntroPage/memeTextOutside.jpg","components/IntroPage/memeFreestyle.jpg","components/MemeEditor/TextImage/FontButtons/index.module.css","components/MemeEditor/FreeStyleMeme/Options/memeOptions.module.css","service/firebase.js","context/Auth.js","components/FireBaseSignIn/index.js","components/IntroPage/index.js","components/MemeEditor/useImage.js","components/MemeEditor/TextImage/FontButtons/index.js","components/MemeEditor/TextImage/ColorPicker/index.js","components/MemeEditor/TextImage/index.js","components/MemeEditor/FreeStyleMeme/calcPos.js","components/MemeEditor/FreeStyleMeme/MemeTextState.js","components/MemeEditor/FreeStyleMeme/Meme/MemeText.js","components/MemeEditor/FreeStyleMeme/Meme/MemeImage.js","components/MemeEditor/FreeStyleMeme/Meme/index.js","components/MemeEditor/FreeStyleMeme/Meme/Meme.js","components/MemeEditor/FreeStyleMeme/Options/MemeTextOptions.js","components/MemeEditor/FreeStyleMeme/Options/PaddingOption.js","components/MemeEditor/FreeStyleMeme/Options/index.js","components/MemeEditor/FreeStyleMeme/Options/Options.js","components/MemeEditor/FreeStyleMeme/FreeStyleMeme.js","components/MemeEditor/FreeStyleMeme/index.js","components/MemeEditor/downloadImg.js","components/MemeEditor/Nav/index.js","components/MemeEditor/index.js","App.js","serviceWorker.js","index.js","components/MemeEditor/index.module.css","components/FireBaseSignIn/FireBaseSignIn.module.css","components/MemeEditor/Nav/index.module.css","components/MemeEditor/TextImage/ColorPicker/index.module.css","components/MemeEditor/FreeStyleMeme/index.module.css","components/MemeEditor/FreeStyleMeme/Options/index.module.css"],"names":["module","exports","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","signInWithGoogle","provider","GoogleAuthProvider","signInWithPopup","signInWithGitHub","GithubAuthProvider","logOut","signOut","AuthContext","React","createContext","AuthContextProvider","children","useState","user","setUser","useEffect","onAuthStateChanged","authorized","Provider","value","useContext","className","styles","signIn","email","onClick","iconButton","icon","src","alt","meme","setMeme","fetch","then","response","json","result","console","log","data","memes","map","x","url","catch","error","component","to","navButton","FireBaseSignIn","title","memeSelectionContainer","linkMemeTypes","memeImgCont","memeTypesImg","require","titleExample","imgContainer","slice","images","resize","img","height","width","ratio","FontButtons","props","styleOptions","fontButtonContainer","Button","setFont","style","fontFamily","fontSize","sizeButtons","setSize","letterSize","ColorPicker","showColorPicker","setShowColorPicker","bodyContainer","ChromePickerContainer","display","color","currentColor","onChange","updatedColor","setColor","hex","forwardRef","imageNodeRef","image","setImage","getImage","text","inner","topText","setTopText","bottomText","setBottomText","fontText","setFontText","setFontSize","textColor","setTextColor","getInnerStyle","font","SizeOfFont","getOuterStyle","backgroundColor","ref","memeContainer","textTop","MemeImage","textBottom","options","htmlFor","inp","id","type","e","target","label","focusBg","fontStyleContainer","memeImage","backgroundImage","position","backgroundRepeat","backgroundSize","calcRelativePos","relation","left","pageX","totalOffsetLeft","top","pageY","totalOffsetTop","getTotalLocation","node","offsetLeft","offsetTop","offsetParent","reducer","memeTexts","action","addText","setText","removeText","changeTextStyle","changePosition","onFocus","event","newMemeText","getNewMemeText","v","focus","index","findIndexById","arr","reduce","total","next","newText","JSON","parse","stringify","new","prop","parseInt","newPos","calcPos","zIndex","cols","borderWidth","borderColor","transform","element","MemeTextsContext","reduceMemeTexts","offset","onDrag","focusedMemeText","useRef","current","draggable","onDragEnd","rows","Math","max","split","length","adjustRows","num","expandWithText","Meme","onImageClick","space","MemeTexts","i","MemeText","key","padTop","paddingTop","topColor","padBottom","paddingBottom","bottom","bottomColor","memeText","headline","removeMemeText","onPropChange","propName","opacity","removeButton","cssOption","cssOptionInput","topOrBottom","setSpace","vColor","set","property","s","min","Options","filter","PaddingOption","memeTextsButtons","MemeTextOptions","useReducer","useUpdatedOffset","useHandleUnAuthorized","body","memeImageRef","blockUnAuthorized","alert","setOffSet","recalcOffset","FreeStyleMeme","downloadImg","memeName","domeToImage","toPng","dataUrl","name","link","document","createElement","download","href","click","downloadMeme","Nav","goHome","setGoHome","navContainer","accept","DisplayImages","handleMemeSelector","imgMeme","egMemeContainer","MemeEditor","resizeImg","setTimeout","Image","reader","FileReader","onload","readAsDataURL","files","useImage","memeType","useParams","memeImages","setMemeImages","selectedMeme","setSelectedMeme","nameMeme","setNameMeme","editor","nav","header","TextImage","App","path","IntroPage","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.f9ae3d49.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"bodyContainer\":\"TextImage_bodyContainer__2eZhu\",\"memeContainer\":\"TextImage_memeContainer__1VIBd\",\"memeImage\":\"TextImage_memeImage__3Xo2G\",\"fontStyleContainer\":\"TextImage_fontStyleContainer__2pW-U\",\"textBottom\":\"TextImage_textBottom__33Coj\",\"textTop\":\"TextImage_textTop__1T53J\",\"options\":\"TextImage_options__21MDm\",\"styleOptions\":\"TextImage_styleOptions__3K-AI\",\"Button\":\"TextImage_Button__2jUhz\",\"inp\":\"TextImage_inp__1EQ_5\",\"label\":\"TextImage_label__25c6R\",\"focusBg\":\"TextImage_focusBg__3JZZE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"intropage_component__2Eph7\",\"navButton\":\"intropage_navButton__2JYv6\",\"glowing\":\"intropage_glowing__2Y0Ic\",\"memeSelectionContainer\":\"intropage_memeSelectionContainer__2bWuf\",\"linkMemeTypes\":\"intropage_linkMemeTypes__3LdM_\",\"memeTypesImg\":\"intropage_memeTypesImg__1jzvQ\",\"titleExample\":\"intropage_titleExample__3i1C4\",\"imgContainer\":\"intropage_imgContainer__1SqrB\",\"images\":\"intropage_images__1BZ0z\"};","module.exports = __webpack_public_path__ + \"static/media/memeTextInside.acf0d59b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/memeTextOutside.92bae5a2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/memeFreestyle.8d5a158d.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"styleOptions\":\"FontButtons_styleOptions__3giQ8\",\"fontButtonContainer\":\"FontButtons_fontButtonContainer__1e5e0\",\"sizeButtons\":\"FontButtons_sizeButtons__3xlc_\",\"Button\":\"FontButtons_Button__2q4u4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headline\":\"memeOptions_headline__3PVzO\",\"removeButton\":\"memeOptions_removeButton__3WtFr\",\"opacity\":\"memeOptions_opacity__r-7r_\",\"cssOption\":\"memeOptions_cssOption__1h1lN\",\"cssOptionInput\":\"memeOptions_cssOptionInput__2AEwI\"};","import firebase from \"firebase\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyAUT429SZZhzKtWu84CWyZTlLcEVJGz8vA\",\r\n  authDomain: \"memecreator-c2665.firebaseapp.com\",\r\n  databaseURL: \"https://memecreator-c2665.firebaseio.com\",\r\n  projectId: \"memecreator-c2665\",\r\n  storageBucket: \"memecreator-c2665.appspot.com\",\r\n  messagingSenderId: \"634063807183\",\r\n  appId: \"1:634063807183:web:567101b2f2402719fb4dba\",\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const auth = firebase.auth;\r\n\r\nexport function signInWithGoogle() {\r\n  const provider = new auth.GoogleAuthProvider();\r\n  return auth().signInWithPopup(provider);\r\n}\r\n\r\nexport function signInWithGitHub() {\r\n  const provider = new auth.GithubAuthProvider();\r\n  return auth().signInWithPopup(provider);\r\n}\r\n\r\nexport function logOut() {\r\n  auth().signOut();\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { auth } from \"service/firebase\";\r\n\r\nexport const AuthContext = React.createContext();\r\n\r\nexport const AuthContextProvider = ({ children }) => {\r\n  const [user, setUser] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    auth().onAuthStateChanged((user) => {\r\n      setUser(user);\r\n    });\r\n  }, []);\r\n\r\n  const authorized = user ? true : false;\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ authorized, user }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\n// make x more visible\r\n","import React, { useContext } from \"react\";\r\n\r\nimport { logOut, signInWithGoogle, signInWithGitHub } from \"service/firebase\";\r\n\r\nimport { AuthContext } from \"context/Auth\";\r\nimport styles from \"./FireBaseSignIn.module.css\";\r\n\r\nexport default () => {\r\n  const { authorized, user } = useContext(AuthContext);\r\n\r\n  return (\r\n    <div>\r\n      {(authorized && (\r\n        <span className={styles.signIn}>\r\n          {user.email} <button onClick={logOut}> Logout</button>\r\n        </span>\r\n      )) || (\r\n        <>\r\n          <span>Sign in with </span>\r\n          <button className={styles.iconButton} onClick={signInWithGoogle}>\r\n            <img\r\n              className={styles.icon}\r\n              src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\"\r\n              alt=\"Google\"\r\n            ></img>\r\n          </button>\r\n          <button className={styles.iconButton} onClick={signInWithGitHub}>\r\n            <img\r\n              className={styles.icon}\r\n              src={\"/memeCreator/src/icon/gitHub.png\"}\r\n              alt=\"github\"\r\n            ></img>\r\n          </button>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styles from \"./intropage.module.css\";\r\n\r\nimport FireBaseSignIn from \"components/FireBaseSignIn\";\r\n\r\nexport default () => {\r\n  const [meme, setMeme] = useState([]);\r\n  useEffect(() => {\r\n    fetch(\" https://api.imgflip.com/get_memes\")\r\n      .then((response) => response.json())\r\n      .then((result) => {\r\n        console.log(result);\r\n        setMeme(result.data.memes.map((x) => x.url)); // <-- this is an array of urls\r\n      })\r\n      .catch((error) => {});\r\n  }, []);\r\n\r\n  return (\r\n    <div className={styles.component}>\r\n      <nav>\r\n        <Link to=\"/memeCreator/textInOfImage\">\r\n          <button className={styles.navButton}>\r\n            <span>Top/Bottom Text Meme</span>\r\n          </button>\r\n        </Link>\r\n        <Link to=\"/memeCreator/freestyle\">\r\n          <button className={styles.navButton}>\r\n            <span>FreeStyle Meme</span>\r\n          </button>\r\n        </Link>\r\n        <FireBaseSignIn />\r\n      </nav>\r\n      <h1 className={styles.title}>Welcome to the Meme creator</h1>\r\n      <div className={styles.memeSelectionContainer}>\r\n        <Link className={styles.linkMemeTypes} to=\"/memeCreator/textInOfImage\">\r\n          <h2>Top/Bottom Text</h2>\r\n          <p>\r\n            Design a meme with a top and a Bottom text! You can custumize if the\r\n            text is inside or Outside the meme\r\n          </p>\r\n          <div className={styles.memeImgCont}>\r\n            <img\r\n              className={styles.memeTypesImg}\r\n              src={require(\"./memeTextInside.jpg\")}\r\n              alt=\"memeTextInside\"\r\n            ></img>\r\n            <img\r\n              className={styles.memeTypesImg}\r\n              src={require(\"./memeTextOutside.jpg\")}\r\n              alt=\"memeTextOutside\"\r\n            ></img>\r\n          </div>\r\n        </Link>\r\n        <Link className={styles.linkMemeTypes} to=\"/memeCreator/freestyle\">\r\n          <h2>FreeStyle</h2>\r\n          <p>\r\n            Put your text wherever you want in the meme! Try this awesome\r\n            freestyle editor.\r\n          </p>\r\n\r\n          <img\r\n            className={styles.memeTypesImg}\r\n            src={require(\"./memeFreestyle.jpg\")}\r\n            alt=\"serious\"\r\n          ></img>\r\n        </Link>\r\n      </div>\r\n      <h2 className={styles.titleExample}>\r\n        Examples Images you can use for your memes\r\n      </h2>\r\n      <div className={styles.imgContainer}>\r\n        {meme.slice(0, 9).map((x) => (\r\n          <img className={styles.images} src={x} alt=\"img1\"></img>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { useEffect, useState } from \"react\";\r\n\r\nexport default () => {\r\n  const [image, setImage] = useState({ src: \"\" });\r\n\r\n  const angryImg = \"/memeCreator/images/AngrySection.jpeg\";\r\n\r\n  const resizeImg = (img) => {\r\n    setTimeout(() => {\r\n      img = resize(img);\r\n      setTimeout(() => {\r\n        setImage(img);\r\n      }, 0);\r\n    });\r\n  };\r\n\r\n  const img = new Image();\r\n  img.src = angryImg;\r\n\r\n  useEffect(() => {\r\n    resizeImg(img);\r\n  }, []);\r\n\r\n  const getImage = (e) => {\r\n    const reader = new FileReader();\r\n    reader.onload = (e) => {\r\n      img.src = e.target.result;\r\n      console.log(img.height);\r\n      resizeImg(img);\r\n    };\r\n    reader.readAsDataURL(e.target.files[0]);\r\n  };\r\n  return [image, getImage, setImage];\r\n};\r\n\r\nexport const resize = (img) => {\r\n  const MAX_SIZE = 500;\r\n  if (img.height > MAX_SIZE || img.width > MAX_SIZE) {\r\n    const ratio = img.height / img.width;\r\n\r\n    if (img.height > img.width) {\r\n      img.height = MAX_SIZE;\r\n      img.width = MAX_SIZE / ratio;\r\n    } else {\r\n      img.width = MAX_SIZE;\r\n      img.height = MAX_SIZE * ratio;\r\n    }\r\n  }\r\n  return img;\r\n};\r\n","import React from \"react\";\r\n\r\nimport styles from \"./index.module.css\";\r\n\r\nconst FontButtons = (props) => {\r\n  return (\r\n    <div className={styles.styleOptions}>\r\n      {/* Buttons for the Font family */}\r\n      <div className={styles.fontButtonContainer}>\r\n        <button\r\n          className={styles.Button}\r\n          onClick={() => props.setFont(\"Georgia, serif\")}\r\n          style={{\r\n            fontFamily: \"Georgia, serif\",\r\n            fontSize: 15 + \"px\",\r\n          }}\r\n        >\r\n          Georgia\r\n        </button>\r\n        <button\r\n          className={styles.Button}\r\n          onClick={() => props.setFont(\"Arial Black\")}\r\n          style={{ fontFamily: \"Arial Black\", fontSize: 13 + \"px\" }}\r\n        >\r\n          Arial Black\r\n        </button>\r\n        <button\r\n          className={styles.Button}\r\n          onClick={() => props.setFont(\"monospace\")}\r\n          style={{ fontFamily: \"monospace\" }}\r\n        >\r\n          Monospace\r\n        </button>\r\n        <button\r\n          className={styles.Button}\r\n          onClick={() => props.setFont(\"Comic Sans MS\")}\r\n          style={{ fontFamily: \"Comic Sans MS\" }}\r\n        >\r\n          Comic Sans\r\n        </button>\r\n        <button\r\n          className={styles.Button}\r\n          onClick={() => props.setFont(\"cursive\")}\r\n          style={{ fontFamily: \"cursive\" }}\r\n        >\r\n          Cursive\r\n        </button>\r\n        {/* Buttons for the size */}\r\n        <div className={styles.sizeButtons}>\r\n          <button\r\n            className={styles.Button}\r\n            onClick={() => props.setSize(props.letterSize + 1)}\r\n            style={{ fontSize: \"15px\", height: \"35px\" }}\r\n          >\r\n            A+\r\n          </button>\r\n          <button\r\n            className={styles.Button}\r\n            onClick={() => props.setSize(props.letterSize - 1)}\r\n            style={{ fontSize: \"10px\", height: \"35px\" }}\r\n          >\r\n            A-\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FontButtons;\r\n","import React, { useState } from \"react\";\r\nimport { ChromePicker } from \"react-color\";\r\nimport styles from \"./index.module.css\";\r\n\r\nconst ColorPicker = (props) => {\r\n  const [showColorPicker, setShowColorPicker] = useState(false);\r\n  return (\r\n    <div className={styles.bodyContainer}>\r\n      <button\r\n        className={styles.Button}\r\n        onClick={() =>\r\n          setShowColorPicker((showColorPicker) => !showColorPicker)\r\n        }\r\n      >\r\n        {showColorPicker ? \"Close\" : \"Text Color\"}\r\n      </button>\r\n      <div\r\n        className={styles.ChromePickerContainer}\r\n        style={!showColorPicker ? { display: \"none\" } : null}\r\n      >\r\n        <ChromePicker\r\n          color={props.currentColor}\r\n          onChange={(updatedColor) => props.setColor(updatedColor.hex)}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ColorPicker;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport styles from \"./index.module.css\";\r\n\r\n// import downloadImg from \"../downloadImg\";\r\n\r\nimport useImage from \"../useImage\";\r\n\r\nimport FontButtons from \"./FontButtons\";\r\n\r\nimport ColorPicker from \"./ColorPicker\";\r\n\r\nexport default React.forwardRef(\r\n  ({ image, setImage, getImage }, imageNodeRef) => {\r\n    const [topText, setTopText] = useState({ text: \"top text\", inner: true });\r\n    const [bottomText, setBottomText] = useState({\r\n      text: \"bottom text\",\r\n      inner: true,\r\n    });\r\n\r\n    const [fontText, setFontText] = useState(\"\");\r\n\r\n    const [fontSize, setFontSize] = useState(12);\r\n\r\n    const [textColor, setTextColor] = useState(\"black\");\r\n\r\n    const getInnerStyle = (text, font, SizeOfFont) => {\r\n      return {\r\n        display: text.inner ? \"block\" : \"none\",\r\n        color: textColor,\r\n        fontFamily: font,\r\n        fontSize: SizeOfFont,\r\n      };\r\n    };\r\n    // Function that create the top text section\r\n    const getOuterStyle = (text, font, SizeOfFont) => {\r\n      return {\r\n        display: !text.inner ? \"block\" : \"none\",\r\n        color: textColor,\r\n        backgroundColor: text.inner ? \"transparent\" : \"white\",\r\n        fontFamily: font,\r\n        fontSize: SizeOfFont,\r\n      };\r\n    };\r\n\r\n    return (\r\n      <div className={styles.bodyContainer}>\r\n        <div\r\n          ref={imageNodeRef}\r\n          className={styles.memeContainer}\r\n          style={{\r\n            height: image.height + \"px\",\r\n            width: image.width + \"px\",\r\n          }}\r\n        >\r\n          <div\r\n            style={getOuterStyle(topText, fontText, fontSize)}\r\n            className={styles.textTop}\r\n          >\r\n            {topText.text}\r\n          </div>\r\n\r\n          <MemeImage image={image} onClick={() => {}}>\r\n            <div\r\n              style={getInnerStyle(topText, fontText, fontSize)}\r\n              className={styles.textTop}\r\n            >\r\n              {topText.text}\r\n            </div>\r\n            {/* This span prevents that the bottom text to go up when the top text is outside of the image */}\r\n            <span></span>\r\n\r\n            {/* Inside Bottom text */}\r\n            <div\r\n              style={getInnerStyle(bottomText, fontText, fontSize)}\r\n              className={styles.textBottom}\r\n            >\r\n              {bottomText.text}\r\n            </div>\r\n          </MemeImage>\r\n          <div\r\n            style={getOuterStyle(bottomText, fontText, fontSize)}\r\n            className={styles.textBottom}\r\n          >\r\n            {bottomText.text}\r\n          </div>\r\n        </div>\r\n\r\n        <div className={styles.options}>\r\n          {/* Text Input. Top and Bottom */}\r\n          <label htmlFor=\"inp\" className={styles.inp}>\r\n            <input\r\n              id=\"inp\"\r\n              type=\"text\"\r\n              value={topText.text}\r\n              onChange={(e) => {\r\n                setTopText({ ...topText, text: e.target.value });\r\n              }}\r\n            />\r\n            <span className={styles.label}>Top Text</span>\r\n            <span className={styles.focusBg}></span>\r\n          </label>\r\n          <label htmlFor=\"inp2\" className={styles.inp}>\r\n            <input\r\n              id=\"inp2\"\r\n              type=\"text\"\r\n              value={bottomText.text}\r\n              onChange={(e) => {\r\n                setBottomText({ ...bottomText, text: e.target.value });\r\n              }}\r\n            />\r\n            <span className={styles.label}>Bottom Text</span>\r\n            <span className={styles.focusBg}></span>\r\n          </label>\r\n\r\n          {/* Button to Change Top text position */}\r\n          <button\r\n            className={styles.Button}\r\n            onClick={() => setTopText({ ...topText, inner: !topText.inner })}\r\n          >\r\n            Top in/out\r\n          </button>\r\n\r\n          {/* Button to Change Bottom text position */}\r\n          <button\r\n            className={styles.Button}\r\n            onClick={() =>\r\n              setBottomText({ ...bottomText, inner: !bottomText.inner })\r\n            }\r\n          >\r\n            bottom in/out\r\n          </button>\r\n        </div>\r\n        <div className={styles.fontStyleContainer}>\r\n          <FontButtons\r\n            setFont={setFontText}\r\n            setSize={setFontSize}\r\n            letterSize={fontSize}\r\n          ></FontButtons>\r\n          <ColorPicker setColor={setTextColor} currentColor={textColor} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nconst MemeImage = React.forwardRef(({ image, children }, imageNodeRef) => {\r\n  return (\r\n    <div\r\n      ref={imageNodeRef}\r\n      className={styles.memeImage}\r\n      style={{\r\n        backgroundImage: \"url(\" + image.src + \")\",\r\n        height: image.height + \"px\",\r\n        width: image.width + \"px\",\r\n        position: \"relative\",\r\n        backgroundRepeat: \"no-repeat\",\r\n        backgroundSize: \"contain\",\r\n      }}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n});\r\n","export default (e) => {\r\n  const relation = getTotalLocation(e.target);\r\n  return calcRelativePos(e, relation);\r\n};\r\n\r\nexport const calcRelativePos = (e, relation) => {\r\n  const x = e.pageX - relation.totalOffsetLeft;\r\n  const y = e.pageY - relation.totalOffsetTop;\r\n  const left = x + \"px\";\r\n  const top = y + \"px\";\r\n  return { left, top };\r\n};\r\n\r\nexport const getTotalLocation = (node) => {\r\n  let totalOffsetLeft = node.offsetLeft;\r\n  let totalOffsetTop = node.offsetTop;\r\n  while (node.offsetParent) {\r\n    node = node.offsetParent;\r\n\r\n    totalOffsetLeft += node.offsetLeft;\r\n    totalOffsetTop += node.offsetTop;\r\n  }\r\n  return { totalOffsetLeft, totalOffsetTop };\r\n};\r\n","import { useReducer } from \"react\";\r\n\r\nimport calcPos from \"./calcPos\";\r\n\r\nexport default () => {\r\n  return useReducer(reducer, []);\r\n};\r\n\r\nfunction reducer(memeTexts, action) {\r\n  switch (action.type) {\r\n    case \"addText\":\r\n      return addText(memeTexts, action);\r\n    case \"setText\":\r\n      return setText(memeTexts, action);\r\n    case \"removeText\":\r\n      return removeText(memeTexts, action);\r\n    case \"changeTextStyle\":\r\n      return changeTextStyle(memeTexts, action);\r\n    case \"changePosition\":\r\n      return changePosition(memeTexts, action);\r\n    case \"onFocus\":\r\n      return onFocus(memeTexts, action);\r\n    default:\r\n      console.log(\"default\");\r\n      break;\r\n  }\r\n}\r\n\r\nexport const addText = (memeTexts, { event }) => {\r\n  const newMemeText = getNewMemeText(event);\r\n  return [...memeTexts.map((v) => ({ ...v, focus: false })), newMemeText];\r\n};\r\n\r\nexport const removeText = (memeTexts, { id }) => {\r\n  const index = findIndexById(id, memeTexts);\r\n  return [...memeTexts.slice(0, index), ...memeTexts.slice(index + 1)];\r\n};\r\n\r\nconst findIndexById = (id, arr) => {\r\n  return (\r\n    [0, ...arr].reduce(\r\n      (total, next, index) => (id === next.id && index) || total\r\n    ) - 1\r\n  );\r\n};\r\n\r\nexport const setText = (memeTexts, { id, newText }) => {\r\n  const index = findIndexById(id, memeTexts);\r\n  const arr = memeTexts.map((v) => ({ ...v, focus: false }));\r\n  arr[index] = JSON.parse(JSON.stringify(arr[index]));\r\n  arr[index].text = newText;\r\n  arr[index].focus = true;\r\n  return [...arr];\r\n};\r\n\r\nexport const onFocus = (memeTexts, { id }) => {\r\n  const index = findIndexById(id, memeTexts);\r\n  const arr = memeTexts.map((v) => ({ ...v, focus: false }));\r\n  arr[index] = JSON.parse(JSON.stringify(arr[index]));\r\n  arr[index].new = false;\r\n  arr[index].focus = true;\r\n  return [...arr];\r\n};\r\n\r\nexport const changeTextStyle = (memeTexts, { id, prop, value }) => {\r\n  const index = findIndexById(id, memeTexts);\r\n\r\n  const arr = memeTexts.map((v) => ({ ...v, focus: false }));\r\n  arr[index] = JSON.parse(JSON.stringify(arr[index]));\r\n  if (prop === \"fontSize\") value = parseInt(value);\r\n  arr[index].style[prop] = value;\r\n  arr[index].focus = true;\r\n  return [...arr];\r\n};\r\n\r\nexport const changePosition = (memeTexts, { id, newPos }) => {\r\n  const index = findIndexById(id, memeTexts);\r\n  const arr = memeTexts.map((v) => ({ ...v, focus: false }));\r\n  arr[index] = JSON.parse(JSON.stringify(arr[index]));\r\n  arr[index].style.left = newPos.left;\r\n  arr[index].style.top = newPos.top;\r\n  arr[index].focus = true;\r\n  return [...arr];\r\n};\r\n\r\nlet id = 0;\r\n\r\nconst getNewMemeText = (e) => {\r\n  const result = calcPos(e);\r\n  const new_MemeText = {\r\n    id: id++,\r\n    text: \"text\",\r\n    style: {\r\n      display: \"block\",\r\n      position: \"absolute\",\r\n      zIndex: \"100\",\r\n      color: \"white\",\r\n      cols: \"4\",\r\n      fontSize: 30,\r\n      resize: \"none\",\r\n      borderWidth: \"0px\",\r\n      borderColor: \"transparent\",\r\n      backgroundColor: \"transparent\",\r\n      transform: \"\",\r\n      left: result.left,\r\n      top: result.top,\r\n    },\r\n    new: true,\r\n    focus: true,\r\n  };\r\n\r\n  return new_MemeText;\r\n};\r\n","import React, { useRef, useEffect, useContext } from \"react\";\r\n\r\nimport { MemeTextsContext } from \"../index\";\r\nimport { calcRelativePos } from \"../calcPos\";\r\n\r\nexport default React.forwardRef(({ element }, ref) => {\r\n  const { reduceMemeTexts, offset } = useContext(MemeTextsContext);\r\n  const { text, style, id } = element;\r\n\r\n  const expandWithText = (e) => {\r\n    const max = e.target.value\r\n      .split(\"\\n\")\r\n      .map((x) => x.length)\r\n      .reduce((total, num) => Math.max(total, num));\r\n    e.target.style.width = max + 2 + \"ch\";\r\n  };\r\n\r\n  const adjustRows = (e) =>\r\n    (e.target.rows = Math.max(1, e.target.value.split(\"\\n\").length));\r\n\r\n  const onChange = (e) => {\r\n    adjustRows(e);\r\n    expandWithText(e);\r\n    reduceMemeTexts({ type: \"setText\", newText: e.target.value, id });\r\n  };\r\n\r\n  const onDrag = (e) => {\r\n    reduceMemeTexts({\r\n      type: \"changePosition\",\r\n      id,\r\n      newPos: calcRelativePos(e, offset),\r\n    });\r\n  };\r\n\r\n  const focusedMemeText = useRef();\r\n\r\n  useEffect(() => {\r\n    focusedMemeText.current.focus();\r\n  }, []);\r\n\r\n  return (\r\n    <textarea\r\n      draggable=\"true\"\r\n      onFocus={() => reduceMemeTexts({ type: \"onFocus\", id })}\r\n      onDrag={onDrag}\r\n      onDragEnd={onDrag}\r\n      type=\"text\"\r\n      onChange={onChange}\r\n      value={text}\r\n      style={style}\r\n      ref={focusedMemeText}\r\n      rows=\"1\"\r\n      cols=\"4\"\r\n    />\r\n  );\r\n});\r\n","import React, { useContext } from \"react\";\r\n\r\nimport { MemeTextsContext } from \"../index\";\r\n\r\nexport default ({ image, children }) => {\r\n  const { reduceMemeTexts } = useContext(MemeTextsContext);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        backgroundImage: \"url(\" + image.src + \")\",\r\n        height: image.height + \"px\",\r\n        width: image.width + \"px\",\r\n        position: \"relative\",\r\n        backgroundRepeat: \"no-repeat\",\r\n        backgroundSize: \"contain\",\r\n      }}\r\n    >\r\n      <div\r\n        onClick={(event) => {\r\n          reduceMemeTexts({\r\n            type: \"addText\",\r\n            event: {\r\n              pageX: event.pageX,\r\n              target: event.target,\r\n              pageY: event.pageY,\r\n            },\r\n          });\r\n        }}\r\n        style={{ width: \"inherit\", height: \"inherit\" }}\r\n      ></div>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n","import Meme from \"./Meme\";\r\n\r\nexport default Meme;\r\n","import React, { useContext } from \"react\";\r\n\r\nimport { MemeTextsContext } from \"../index\";\r\n\r\nimport styles from \"./index.module.css\";\r\n\r\nimport MemeText from \"./MemeText\";\r\nimport MemeImage from \"./MemeImage\";\r\n\r\nexport default React.forwardRef(({ onImageClick, image }, ref) => {\r\n  const { memeTexts, space } = useContext(MemeTextsContext);\r\n\r\n  const MemeTexts = memeTexts.map((element, i) => (\r\n    <MemeText key={i} element={element} />\r\n  ));\r\n\r\n  const padTop = {\r\n    paddingTop: space.top + \"px\",\r\n    backgroundColor: space.topColor,\r\n  };\r\n  const padBottom = {\r\n    paddingBottom: space.bottom + \"px\",\r\n    backgroundColor: space.bottomColor,\r\n  };\r\n\r\n  return (\r\n    <div ref={ref} className={styles.meme} onClick={onImageClick}>\r\n      <div style={padTop}></div>\r\n      <MemeImage image={image}>{MemeTexts}</MemeImage>\r\n      <div style={padBottom}></div>\r\n    </div>\r\n  );\r\n});\r\n\r\n/*Forward ref makes it possible to forward the ref to the component*/\r\n","import React, { useContext } from \"react\";\r\n\r\nimport styles from \"./memeOptions.module.css\";\r\n\r\nimport { MemeTextsContext } from \"../index\";\r\n\r\nexport default ({ memeText }) => {\r\n  const { reduceMemeTexts } = useContext(MemeTextsContext);\r\n\r\n  const headline = (memeText && memeText.text) || \"no text selected\";\r\n  const removeMemeText =\r\n    memeText &&\r\n    (() => reduceMemeTexts({ type: \"removeText\", id: memeText.id }));\r\n\r\n  const onPropChange =\r\n    (memeText &&\r\n      ((propName) => (e) =>\r\n        reduceMemeTexts({\r\n          type: \"changeTextStyle\",\r\n          id: memeText.id,\r\n          prop: propName,\r\n          value: e.target.value,\r\n        }))) ||\r\n    (() => {});\r\n  return (\r\n    <div className={memeText ? \"\" : styles.opacity}>\r\n      <div>\r\n        <h5 className={styles.headline}>\r\n          {headline}\r\n          <img\r\n            className={styles.removeButton}\r\n            src=\"/memeCreator/src/icon/remove.png\"\r\n            onClick={removeMemeText}\r\n            alt=\"remove\"\r\n          />\r\n        </h5>\r\n      </div>\r\n      <div>\r\n        Set css:\r\n        {[\r\n          \"color\",\r\n          \"backgroundColor\",\r\n          \"fontSize\",\r\n          \"transform\",\r\n          \"textTransform\",\r\n          \"fontFamily\",\r\n        ].map((propName, i) => (\r\n          <div key={i} className={styles.cssOption}>\r\n            <label htmlFor={i + \"propName\"}> {propName}</label>\r\n            <br />\r\n            <input\r\n              id={i + \"propName\"}\r\n              className={styles.cssOptionInput}\r\n              value={memeText && memeText.style[propName]}\r\n              onChange={onPropChange(propName)}\r\n            />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { MemeTextsContext } from \"../index\";\r\n\r\nimport styles from \"./memeOptions.module.css\";\r\n\r\nexport default ({ topOrBottom }) => {\r\n  const { space, setSpace } = useContext(MemeTextsContext);\r\n\r\n  const v = topOrBottom;\r\n  const vColor = topOrBottom + \"Color\";\r\n\r\n  const set = (property) => (e) => {\r\n    const s = { ...space };\r\n    s[property] = e.target.value;\r\n    setSpace(s);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.cssOption}>\r\n      Set top padding\r\n      <br />\r\n      <input\r\n        type=\"range\"\r\n        min=\"0\"\r\n        max=\"100\"\r\n        value={space[v]}\r\n        onChange={set(v)}\r\n        className={styles.cssOptionInput}\r\n      />\r\n      <br />\r\n      color:\r\n      <br />\r\n      <input\r\n        className={styles.cssOptionInput}\r\n        type=\"text\"\r\n        value={space[vColor]}\r\n        onChange={set(vColor)}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import Options from \"./Options\";\r\n\r\nexport default Options;\r\n","import React, { useContext } from \"react\";\r\n\r\nimport styles from \"./index.module.css\";\r\n\r\nimport { MemeTextsContext } from \"../index\";\r\n\r\nimport MemeTextOptions from \"./MemeTextOptions\";\r\n\r\nimport PaddingOption from \"./PaddingOption\";\r\n\r\nexport default function Options() {\r\n  const { memeTexts } = useContext(MemeTextsContext);\r\n\r\n  const memeText = memeTexts.filter((x) => x.focus)[0];\r\n\r\n  return (\r\n    <div className={styles.options}>\r\n      <PaddingOption topOrBottom={\"top\"} />\r\n      <div className={styles.memeTextsButtons}>\r\n        <MemeTextOptions memeText={memeText} />\r\n      </div>\r\n      <PaddingOption topOrBottom={\"bottom\"} />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\n\r\nimport useMemeTextsReducer from \"./MemeTextState\";\r\n\r\nimport styles from \"./index.module.css\";\r\n\r\nimport Meme from \"./Meme\";\r\n\r\nimport Options from \"./Options\";\r\n\r\nimport { getTotalLocation } from \"./calcPos\";\r\n\r\nimport { AuthContext } from \"context/Auth\";\r\n\r\nexport const MemeTextsContext = React.createContext([]);\r\n\r\nexport default React.forwardRef(({ image }, imageNodeRef) => {\r\n  const [memeTexts, reduceMemeTexts] = useMemeTextsReducer();\r\n\r\n  const offset = useUpdatedOffset(memeTexts, imageNodeRef);\r\n\r\n  useHandleUnAuthorized(memeTexts, reduceMemeTexts);\r\n\r\n  const [space, setSpace] = useState({\r\n    top: \"0\",\r\n    topColor: \"white\",\r\n    bottom: \"0\",\r\n    bottomColor: \"white\",\r\n  });\r\n\r\n  return (\r\n    <div className={styles.bodyContainer}>\r\n      <div className={styles.body}>\r\n        <MemeTextsContext.Provider\r\n          value={{\r\n            space,\r\n            setSpace,\r\n            memeTexts: memeTexts,\r\n            reduceMemeTexts,\r\n            offset,\r\n          }}\r\n        >\r\n          <Meme ref={imageNodeRef} image={image} />\r\n          <Options memeImageRef={imageNodeRef} />\r\n        </MemeTextsContext.Provider>\r\n      </div>\r\n      <div></div>\r\n    </div>\r\n  );\r\n});\r\n\r\nconst useHandleUnAuthorized = (memeTexts, reduceMemeTexts) => {\r\n  const { authorized } = useContext(AuthContext);\r\n\r\n  useEffect(() => {\r\n    blockUnAuthorized();\r\n  }, [memeTexts]);\r\n\r\n  const blockUnAuthorized = () => {\r\n    if (!authorized && memeTexts.length) {\r\n      reduceMemeTexts({ type: \"removeText\", id: memeTexts[0].id });\r\n      alert(\"cant use pro version of meme editor without being logged in\");\r\n    }\r\n  };\r\n};\r\n\r\nconst useUpdatedOffset = (memeTexts, imageNodeRef) => {\r\n  const [offset, setOffSet] = useState({\r\n    totalOffsetLeft: 0,\r\n    totalOffsetTop: 0,\r\n  });\r\n\r\n  useEffect(() => {\r\n    recalcOffset();\r\n  }, [memeTexts]);\r\n\r\n  const recalcOffset = () => {\r\n    if (imageNodeRef.current) {\r\n      setOffSet(getTotalLocation(imageNodeRef.current));\r\n    }\r\n  };\r\n  return offset;\r\n};\r\n","import FreeStyleMeme, { MemeTextsContext } from \"./FreeStyleMeme\";\r\n\r\nexport default FreeStyleMeme;\r\n\r\nexport { MemeTextsContext };\r\n","import domeToImage from \"dom-to-image\";\r\n\r\nfunction downloadImg(node, memeName) {\r\n  domeToImage\r\n    .toPng(node)\r\n    .then(function (dataUrl) {\r\n      downloadMeme(dataUrl, memeName);\r\n    })\r\n    .catch(function (error) {\r\n      console.error(\"oops, something went wrong!\", error);\r\n    });\r\n}\r\n\r\nfunction downloadMeme(dataUrl, name) {\r\n  var link = document.createElement(\"a\");\r\n  link.download = (name && name + \".jpg\") || \"meme.jpg\";\r\n  link.href = dataUrl;\r\n  link.click();\r\n}\r\n\r\nexport default downloadImg;\r\n","import React, { useState } from \"react\";\r\nimport styles from \"./index.module.css\";\r\nimport downloadImg from \"../downloadImg\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport FireBaseSignIn from \"components/FireBaseSignIn\";\r\n\r\nconst Nav = ({ imageNodeRef, getImage, memeName }) => {\r\n  const [goHome, setGoHome] = useState(false);\r\n\r\n  return (\r\n    <div className={styles.navContainer}>\r\n      {goHome && <Redirect to=\"/memeCreator/\"></Redirect>}\r\n      <button className={styles.navButton} onClick={() => setGoHome(!goHome)}>\r\n        Home\r\n      </button>\r\n      <button className={styles.navButton}>\r\n        <label htmlFor=\"files\">Upload an Image</label>\r\n      </button>\r\n      <input\r\n        id=\"files\"\r\n        type=\"file\"\r\n        name=\"load image\"\r\n        accept=\"image/png, image/jpeg\"\r\n        onChange={getImage}\r\n        style={{ display: \"none\" }}\r\n      />\r\n      <button\r\n        className={styles.navButton}\r\n        onClick={() => {\r\n          downloadImg(imageNodeRef.current, memeName);\r\n        }}\r\n      >\r\n        Download Meme\r\n      </button>\r\n      <button className={styles.navButton}>Share</button>\r\n      <FireBaseSignIn />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\n\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport styles from \"./index.module.css\";\r\n\r\nimport TextImage from \"./TextImage\";\r\n\r\nimport FreeStyleMeme from \"./FreeStyleMeme\";\r\n\r\nimport Nav from \"./Nav\";\r\n\r\nimport useImage, { resize } from \"./useImage\";\r\n\r\nconst MemeEditor = () => {\r\n  const [image, getImage, setImage] = useImage();\r\n  const { memeType } = useParams();\r\n  // freestyle === FreeStyleMeme and rest can be TextImage\r\n  const [memeImages, setMemeImages] = useState([]);\r\n  const [selectedMeme, setSelectedMeme] = useState();\r\n  const [nameMeme, setNameMeme] = useState(\"meme\");\r\n  useEffect(() => {\r\n    fetch(\" https://api.imgflip.com/get_memes\")\r\n      .then((response) => response.json())\r\n      .then((result) => {\r\n        const images = result.data.memes.map((x) => {\r\n          const img = new Image();\r\n          img.src = x.url;\r\n          return resize(img);\r\n        });\r\n\r\n        setMemeImages(images);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n  const handleMemeSelector = (e) => {\r\n    setSelectedMeme({\r\n      src: e.target.src,\r\n      height: e.target.height * 5,\r\n      width: e.target.width * 5,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (selectedMeme) {\r\n      setImage(selectedMeme);\r\n    }\r\n  }, [selectedMeme]);\r\n\r\n  const imageNodeRef = useRef();\r\n\r\n  return (\r\n    <div className={styles.editor}>\r\n      <Nav\r\n        className={styles.nav}\r\n        imageNodeRef={imageNodeRef}\r\n        getImage={getImage}\r\n        memeName={nameMeme}\r\n      ></Nav>\r\n      <div className={styles.header}>\r\n        <h3>Make Your Own Meme! </h3>\r\n      </div>\r\n      {memeImages[0] && (\r\n        <DisplayImages\r\n          meme={memeImages}\r\n          handleMemeSelector={handleMemeSelector}\r\n        ></DisplayImages>\r\n      )}\r\n      <div className={styles.bodyContainer}>\r\n        <label htmlFor=\"inp\"> Meme Name: </label>\r\n        <input\r\n          id=\"inp\"\r\n          type=\"text\"\r\n          value={nameMeme}\r\n          onChange={(e) => {\r\n            setNameMeme(e.target.value);\r\n          }}\r\n        />\r\n        {(memeType === \"freestyle\" && (\r\n          <FreeStyleMeme\r\n            ref={imageNodeRef}\r\n            image={image}\r\n            getImage={getImage}\r\n            setImage={setImage}\r\n            selectedMeme={selectedMeme}\r\n          />\r\n        )) || (\r\n          <TextImage\r\n            ref={imageNodeRef}\r\n            image={image}\r\n            getImage={getImage}\r\n            setImage={setImage}\r\n            selectedMeme={selectedMeme}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst DisplayImages = ({ meme, handleMemeSelector }) => {\r\n  console.log(\"Meme\");\r\n\r\n  console.log(meme[0]);\r\n  const images = meme.map((img, i) => (\r\n    <img\r\n      key={i}\r\n      className={styles.imgMeme}\r\n      onClick={handleMemeSelector}\r\n      src={img.src}\r\n      style={{\r\n        width: img.width * 0.2 + \"px\",\r\n        height: img.height * 0.2 + \"px\",\r\n      }}\r\n      alt=\"img\"\r\n    ></img>\r\n  ));\r\n\r\n  return <div className={styles.egMemeContainer}> {images}</div>;\r\n};\r\n\r\nexport default MemeEditor;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\n\r\nimport IntroPage from \"components/IntroPage\";\r\nimport MemeEditor from \"components/MemeEditor\";\r\n\r\nimport { AuthContextProvider } from \"context/Auth\";\r\n\r\nfunction App() {\r\n  return (\r\n    <AuthContextProvider>\r\n      <Router>\r\n        <Switch>\r\n          <Route path=\"/memeCreator/:memeType\">\r\n            <MemeEditor />\r\n          </Route>\r\n          <Route path=\"/memeCreator\">\r\n            <IntroPage />\r\n          </Route>\r\n          <Route path=\"*\">\r\n            <Redirect to=\"/memeCreator\"></Redirect>\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </AuthContextProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editor\":\"MemeEditor_editor__2BjEE\",\"nav\":\"MemeEditor_nav__2g9DJ\",\"header\":\"MemeEditor_header__eMX6P\",\"bodyContainer\":\"MemeEditor_bodyContainer__3Uf20\",\"egMemeContainer\":\"MemeEditor_egMemeContainer__3Q8rE\",\"imgMeme\":\"MemeEditor_imgMeme__1yGOA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"signInContainer\":\"FireBaseSignIn_signInContainer__nwEZE\",\"signIn\":\"FireBaseSignIn_signIn__uwops\",\"iconButton\":\"FireBaseSignIn_iconButton__3mxlz\",\"icon\":\"FireBaseSignIn_icon__3hzhW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navContainer\":\"Nav_navContainer__2DiNd\",\"navButton\":\"Nav_navButton__3Jmjx\",\"glowing\":\"Nav_glowing__1oXh-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bodyContainer\":\"ColorPicker_bodyContainer__3T7Ny\",\"Button\":\"ColorPicker_Button__cSZSI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bodyContainer\":\"FreeStyleMeme_bodyContainer__eWctY\",\"body\":\"FreeStyleMeme_body__2Ikv_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"options\":\"Options_options__5q3gg\"};"],"sourceRoot":""}