{"version":3,"sources":["components/MemeEditor/FreeStyle/Meme/index.module.css","components/IntroPage/intropage.module.css","components/IntroPage/memeTextInside.jpg","components/IntroPage/memeTextOutside.jpg","components/IntroPage/memeFreestyle.jpg","components/MemeEditor/TextImage/FontButtons/index.module.css","components/MemeEditor/FreeStyle/Options/memeOptions.module.css","service/firebase.js","context/Auth.js","components/FireBaseSignIn/index.js","components/IntroPage/index.js","components/MemeEditor/TextImage/FontButtons/index.js","components/MemeEditor/TextImage/ColorPicker/index.js","components/MemeEditor/TextImage/index.js","components/MemeEditor/FreeStyle/calcPos.js","components/MemeEditor/FreeStyle/MemeTextState.js","components/MemeEditor/FreeStyle/Meme/MemeText.js","components/MemeEditor/FreeStyle/Meme/MemeImage.js","components/MemeEditor/FreeStyle/Meme/index.js","components/MemeEditor/FreeStyle/Meme/Meme.js","components/MemeEditor/FreeStyle/Options/MemeTextOptions.js","components/MemeEditor/FreeStyle/Options/PaddingOption.js","components/MemeEditor/FreeStyle/Options/index.js","components/MemeEditor/FreeStyle/Options/Options.js","components/MemeEditor/FreeStyle/FreeStyle.js","components/MemeEditor/FreeStyle/index.js","components/MemeEditor/downloadImg.js","components/MemeEditor/Nav/index.js","components/MemeEditor/useImage.js","components/MemeEditor/index.js","App.js","serviceWorker.js","index.js","components/MemeEditor/index.module.css","components/FireBaseSignIn/FireBaseSignIn.module.css","components/MemeEditor/Nav/index.module.css","components/MemeEditor/TextImage/ColorPicker/index.module.css","components/MemeEditor/FreeStyle/index.module.css","components/MemeEditor/TextImage/index.module.css","components/MemeEditor/FreeStyle/Options/index.module.css"],"names":["module","exports","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","signInWithGoogle","provider","GoogleAuthProvider","signInWithPopup","signInWithGitHub","GithubAuthProvider","logOut","signOut","AuthContext","React","createContext","AuthContextProvider","children","useState","user","setUser","useEffect","onAuthStateChanged","authorized","Provider","value","useContext","className","styles","body","email","onClick","iconButton","icon","src","alt","meme","setMeme","fetch","then","response","json","result","data","memes","map","x","url","catch","error","component","to","navButton","FireBaseSignIn","title","memeSelectionContainer","linkMemeTypes","memeImgCont","memeTypesImg","require","titleExample","imgContainer","slice","images","FontButtons","props","styleOptions","fontButtonContainer","Button","setFont","style","fontFamily","fontSize","sizeButtons","setSize","letterSize","height","ColorPicker","showColorPicker","setShowColorPicker","bodyContainer","ChromePickerContainer","display","color","currentColor","onChange","updatedColor","setColor","hex","forwardRef","imageNodeRef","image","memeName","setMemeName","text","inner","topText","setTopText","bottomText","setBottomText","fontText","setFontText","setFontSize","textColor","setTextColor","getInnerStyle","font","SizeOfFont","getOuterStyle","backgroundColor","ref","memeContainer","width","textTop","MemeImage","textBottom","options","htmlFor","inp","id","type","e","target","label","focusBg","fontStyleContainer","memeImage","backgroundImage","position","backgroundRepeat","backgroundSize","calcRelativePos","relation","left","pageX","totalOffsetLeft","top","pageY","totalOffsetTop","getTotalLocation","node","offsetLeft","offsetTop","offsetParent","reducer","memeTexts","action","addText","setText","removeText","changeTextStyle","changePosition","onFocus","console","log","event","newMemeText","getNewMemeText","v","focus","index","findIndexById","arr","reduce","total","next","newText","JSON","parse","stringify","new","prop","parseInt","newPos","calcPos","zIndex","cols","resize","borderWidth","borderColor","transform","element","MemeTextsContext","reduceMemeTexts","offset","onDrag","focusedMemeText","useRef","current","draggable","onDragEnd","rows","Math","max","split","length","adjustRows","num","expandWithText","Meme","space","MemeTexts","i","MemeText","key","padTop","paddingTop","topColor","padBottom","paddingBottom","bottom","bottomColor","memeText","headline","removeMemeText","onPropChange","propName","opacity","removeButton","cssOption","cssOptionInput","topOrBottom","setSpace","vColor","set","property","s","min","Options","filter","PaddingOption","memeTextsButtons","MemeTextOptions","useReducer","useUpdatedOffset","useHandleUnAuthorized","secondFlex","fistFlex","memeImageRef","blockUnAuthorized","alert","setOffSet","recalcOffset","FreeStyle","downloadImg","domeToImage","toPng","dataUrl","name","link","document","createElement","download","href","click","downloadMeme","Nav","getImage","goHome","setGoHome","navContainer","accept","angryImg","Image","img","MAX","MAX_SIZE","ratio","DisplayImages","handleMemeSelector","memeImages","setMemeImages","setTimeout","imgMeme","egMemeContainer","egMemeContainerChild","MemeEditor","setImage","resizeImg","reader","FileReader","onload","readAsDataURL","files","useImage","memeType","useParams","editor","nav","TextImage","App","path","IntroPage","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"+FACAA,EAAOC,QAAU,CAAC,KAAO,qB,qGCAzBD,EAAOC,QAAU,CAAC,UAAY,6BAA6B,UAAY,6BAA6B,QAAU,2BAA2B,uBAAyB,0CAA0C,cAAgB,iCAAiC,aAAe,gCAAgC,aAAe,gCAAgC,aAAe,gCAAgC,OAAS,4B,oBCDnZD,EAAOC,QAAU,IAA0B,4C,oBCA3CD,EAAOC,QAAU,IAA0B,6C,oBCA3CD,EAAOC,QAAU,IAA0B,2C,mBCC3CD,EAAOC,QAAU,CAAC,aAAe,kCAAkC,oBAAsB,yCAAyC,YAAc,iCAAiC,OAAS,8B,mBCA1LD,EAAOC,QAAU,CAAC,SAAW,8BAA8B,aAAe,kCAAkC,QAAU,6BAA6B,UAAY,+BAA+B,eAAiB,sC,sJCW/MC,IAASC,cAVc,CACrBC,OAAQ,0CACRC,WAAY,oCACZC,YAAa,2CACbC,UAAW,oBACXC,cAAe,gCACfC,kBAAmB,eACnBC,MAAO,8CAKF,IAAMC,EAAOT,IAASS,KAEtB,SAASC,IACd,IAAMC,EAAW,IAAIF,EAAKG,mBAC1B,OAAOH,IAAOI,gBAAgBF,GAGzB,SAASG,IACd,IAAMH,EAAW,IAAIF,EAAKM,mBAC1B,OAAON,IAAOI,gBAAgBF,GAGzB,SAASK,IACdP,IAAOQ,UCvBF,IAAMC,EAAcC,IAAMC,gBAEpBC,EAAsB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EAC3BC,mBAAS,IADkB,mBAC5CC,EAD4C,KACtCC,EADsC,KAGnDC,qBAAU,WACRjB,IAAOkB,oBAAmB,SAACH,GACzBC,EAAQD,QAET,IAEH,IAAMI,IAAaJ,EAEnB,OACE,kBAACN,EAAYW,SAAb,CAAsBC,MAAO,CAAEF,aAAYJ,SACxCF,I,iBCZQ,aAAO,IAAD,EACUS,qBAAWb,GAAhCU,EADW,EACXA,WAAYJ,EADD,EACCA,KAEpB,OACE,yBAAKQ,UAAWC,IAAOC,MACnBN,GACA,8BACGJ,EAAKW,MADR,IACe,4BAAQC,QAASpB,GAAjB,aAGf,oCACE,+CACA,4BAAQgB,UAAWC,IAAOI,WAAYD,QAAS1B,GAC7C,yBACEsB,UAAWC,IAAOK,KAClBC,IAAI,8EACJC,IAAI,YAGR,4BAAQR,UAAWC,IAAOI,WAAYD,QAAStB,GAC7C,yBACEkB,UAAWC,IAAOK,KAClBC,IAAK,mCACLC,IAAI,eCxBH,aAAO,IAAD,EACKjB,mBAAS,IADd,mBACZkB,EADY,KACNC,EADM,KAWnB,OATAhB,qBAAU,WACRiB,MAAM,sCACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACLL,EAAQK,EAAOC,KAAKC,MAAMC,KAAI,SAACC,GAAD,OAAOA,EAAEC,WAExCC,OAAM,SAACC,SACT,IAGD,yBAAKtB,UAAWC,IAAOsB,WACrB,6BACE,kBAAC,IAAD,CAAMC,GAAG,8BACP,4BAAQxB,UAAWC,IAAOwB,WACxB,wDAGJ,kBAAC,IAAD,CAAMD,GAAG,0BACP,4BAAQxB,UAAWC,IAAOwB,WACxB,kDAGJ,kBAACC,EAAD,OAEF,wBAAI1B,UAAWC,IAAO0B,OAAtB,+BACA,yBAAK3B,UAAWC,IAAO2B,wBACrB,kBAAC,IAAD,CAAM5B,UAAWC,IAAO4B,cAAeL,GAAG,8BACxC,+CACA,sIAIA,yBAAKxB,UAAWC,IAAO6B,aACrB,yBACE9B,UAAWC,IAAO8B,aAClBxB,IAAKyB,EAAQ,KACbxB,IAAI,mBAEN,yBACER,UAAWC,IAAO8B,aAClBxB,IAAKyB,EAAQ,KACbxB,IAAI,sBAIV,kBAAC,IAAD,CAAMR,UAAWC,IAAO4B,cAAeL,GAAG,0BACxC,yCACA,8GAKA,yBACExB,UAAWC,IAAO8B,aAClBxB,IAAKyB,EAAQ,KACbxB,IAAI,cAIV,wBAAIR,UAAWC,IAAOgC,cAAtB,8CAGA,yBAAKjC,UAAWC,IAAOiC,cACpBzB,EAAK0B,MAAM,EAAG,GAAGjB,KAAI,SAACC,GAAD,OACpB,yBAAKnB,UAAWC,IAAOmC,OAAQ7B,IAAKY,EAAGX,IAAI,e,yDCHtC6B,EAjEK,SAACC,GACnB,OACE,yBAAKtC,UAAWC,IAAOsC,cAErB,yBAAKvC,UAAWC,IAAOuC,qBACrB,4BACExC,UAAWC,IAAOwC,OAClBrC,QAAS,kBAAMkC,EAAMI,QAAQ,mBAC7BC,MAAO,CACLC,WAAY,iBACZC,SAAU,SALd,WAUA,4BACE7C,UAAWC,IAAOwC,OAClBrC,QAAS,kBAAMkC,EAAMI,QAAQ,gBAC7BC,MAAO,CAAEC,WAAY,cAAeC,SAAU,SAHhD,eAOA,4BACE7C,UAAWC,IAAOwC,OAClBrC,QAAS,kBAAMkC,EAAMI,QAAQ,cAC7BC,MAAO,CAAEC,WAAY,cAHvB,aAOA,4BACE5C,UAAWC,IAAOwC,OAClBrC,QAAS,kBAAMkC,EAAMI,QAAQ,kBAC7BC,MAAO,CAAEC,WAAY,kBAHvB,cAOA,4BACE5C,UAAWC,IAAOwC,OAClBrC,QAAS,kBAAMkC,EAAMI,QAAQ,YAC7BC,MAAO,CAAEC,WAAY,YAHvB,WAQA,yBAAK5C,UAAWC,IAAO6C,aACrB,4BACE9C,UAAWC,IAAOwC,OAClBrC,QAAS,kBAAMkC,EAAMS,QAAQT,EAAMU,WAAa,IAChDL,MAAO,CAAEE,SAAU,OAAQI,OAAQ,SAHrC,MAOA,4BACEjD,UAAWC,IAAOwC,OAClBrC,QAAS,kBAAMkC,EAAMS,QAAQT,EAAMU,WAAa,IAChDL,MAAO,CAAEE,SAAU,OAAQI,OAAQ,SAHrC,U,0BC3BKC,EAzBK,SAACZ,GAAW,IAAD,EACiB/C,oBAAS,GAD1B,mBACtB4D,EADsB,KACLC,EADK,KAE7B,OACE,yBAAKpD,UAAWC,IAAOoD,eACrB,4BACErD,UAAWC,IAAOwC,OAClBrC,QAAS,kBACPgD,GAAmB,SAACD,GAAD,OAAsBA,OAG1CA,EAAkB,QAAU,cAE/B,yBACEnD,UAAWC,IAAOqD,sBAClBX,MAAQQ,EAAwC,KAAtB,CAAEI,QAAS,SAErC,kBAAC,eAAD,CACEC,MAAOlB,EAAMmB,aACbC,SAAU,SAACC,GAAD,OAAkBrB,EAAMsB,SAASD,EAAaE,WCZnD1E,MAAM2E,YACnB,WAAmCC,GAAkB,IAAlDC,EAAiD,EAAjDA,MAAOC,EAA0C,EAA1CA,SAAUC,EAAgC,EAAhCA,YAAgC,EACpB3E,mBAAS,CAAE4E,KAAM,WAAYC,OAAO,IADhB,mBAC3CC,EAD2C,KAClCC,EADkC,OAEd/E,mBAAS,CAC3C4E,KAAM,cACNC,OAAO,IAJyC,mBAE3CG,EAF2C,KAE/BC,EAF+B,OAOlBjF,mBAAS,IAPS,mBAO3CkF,EAP2C,KAOjCC,EAPiC,OASlBnF,mBAAS,IATS,mBAS3CsD,EAT2C,KASjC8B,EATiC,OAWhBpF,mBAAS,SAXO,mBAW3CqF,EAX2C,KAWhCC,EAXgC,KAa5CC,EAAgB,SAACX,EAAMY,EAAMC,GACjC,MAAO,CACLzB,QAASY,EAAKC,MAAQ,QAAU,OAChCZ,MAAOoB,EACPhC,WAAYmC,EACZlC,SAAUmC,IAIRC,EAAgB,SAACd,EAAMY,EAAMC,GACjC,MAAO,CACLzB,QAAUY,EAAKC,MAAkB,OAAV,QACvBZ,MAAOoB,EACPM,gBAAiBf,EAAKC,MAAQ,cAAgB,QAC9CxB,WAAYmC,EACZlC,SAAUmC,IAId,OACE,yBAAKhF,UAAWC,IAAOoD,eACrB,yBACE8B,IAAKpB,EACL/D,UAAWC,IAAOmF,cAClBzC,MAAO,CACLM,OAAQe,EAAMf,OAAS,KACvBoC,MAAOrB,EAAMqB,MAAQ,OAGvB,yBACE1C,MAAOsC,EAAcZ,EAASI,EAAU5B,GACxC7C,UAAWC,IAAOqF,SAEjBjB,EAAQF,MAGX,kBAACoB,EAAD,CAAWvB,MAAOA,EAAO5D,QAAS,cAChC,yBACEuC,MAAOmC,EAAcT,EAASI,EAAU5B,GACxC7C,UAAWC,IAAOqF,SAEjBjB,EAAQF,MAGX,+BAGA,yBACExB,MAAOmC,EAAcP,EAAYE,EAAU5B,GAC3C7C,UAAWC,IAAOuF,YAEjBjB,EAAWJ,OAGhB,yBACExB,MAAOsC,EAAcV,EAAYE,EAAU5B,GAC3C7C,UAAWC,IAAOuF,YAEjBjB,EAAWJ,OAIhB,yBAAKnE,UAAWC,IAAOwF,SAErB,2BAAOC,QAAQ,MAAM1F,UAAWC,IAAO0F,KACrC,2BACEC,GAAG,MACHC,KAAK,OACL/F,MAAOuE,EAAQF,KACfT,SAAU,SAACoC,GACTxB,EAAW,2BAAKD,GAAN,IAAeF,KAAM2B,EAAEC,OAAOjG,YAG5C,0BAAME,UAAWC,IAAO+F,OAAxB,YACA,0BAAMhG,UAAWC,IAAOgG,WAE1B,2BAAOP,QAAQ,OAAO1F,UAAWC,IAAO0F,KACtC,2BACEC,GAAG,OACHC,KAAK,OACL/F,MAAOyE,EAAWJ,KAClBT,SAAU,SAACoC,GACTtB,EAAc,2BAAKD,GAAN,IAAkBJ,KAAM2B,EAAEC,OAAOjG,YAGlD,0BAAME,UAAWC,IAAO+F,OAAxB,eACA,0BAAMhG,UAAWC,IAAOgG,WAI1B,4BACEjG,UAAWC,IAAOwC,OAClBrC,QAAS,kBAAMkE,EAAW,2BAAKD,GAAN,IAAeD,OAAQC,EAAQD,WAF1D,cAQA,4BACEpE,UAAWC,IAAOwC,OAClBrC,QAAS,kBACPoE,EAAc,2BAAKD,GAAN,IAAkBH,OAAQG,EAAWH,WAHtD,iBAQA,2BAAOsB,QAAQ,OAAO1F,UAAWC,IAAO0F,KACtC,2BACEC,GAAG,OACHC,KAAK,OACL/F,MAAOmE,EACPP,SAAU,SAACoC,GACT5B,EAAY4B,EAAEC,OAAOjG,UAGzB,0BAAME,UAAWC,IAAO+F,OAAxB,aACA,0BAAMhG,UAAWC,IAAOgG,YAI5B,yBAAKjG,UAAWC,IAAOiG,oBACrB,kBAAC,EAAD,CACExD,QAASgC,EACT3B,QAAS4B,EACT3B,WAAYH,IAEd,kBAAC,EAAD,CAAae,SAAUiB,EAAcpB,aAAcmB,SAOvDW,EAAYpG,IAAM2E,YAAW,WAAsBC,GAAkB,IAArCC,EAAoC,EAApCA,MAAO1E,EAA6B,EAA7BA,SAC3C,OACE,yBACE6F,IAAKpB,EACL/D,UAAWC,IAAOkG,UAClBxD,MAAO,CACLyD,gBAAiB,OAASpC,EAAMzD,IAAM,IACtC0C,OAAQe,EAAMf,OAAS,KACvBoC,MAAOrB,EAAMqB,MAAQ,KACrBgB,SAAU,WACVC,iBAAkB,YAClBC,eAAgB,YAGjBjH,M,QCtKMkH,EAAkB,SAACV,EAAGW,GAKjC,MAAO,CAAEC,KAJCZ,EAAEa,MAAQF,EAASG,gBAEZ,KAEFC,IAHLf,EAAEgB,MAAQL,EAASM,eAEb,OAILC,EAAmB,SAACC,GAG/B,IAFA,IAAIL,EAAkBK,EAAKC,WACvBH,EAAiBE,EAAKE,UACnBF,EAAKG,cAGVR,IAFAK,EAAOA,EAAKG,cAEYF,WACxBH,GAAkBE,EAAKE,UAEzB,MAAO,CAAEP,kBAAiBG,mBCd5B,SAASM,EAAQC,EAAWC,GAC1B,OAAQA,EAAO1B,MACb,IAAK,UACH,OAAO2B,EAAQF,EAAWC,GAC5B,IAAK,UACH,OAAOE,EAAQH,EAAWC,GAC5B,IAAK,aACH,OAAOG,EAAWJ,EAAWC,GAC/B,IAAK,kBACH,OAAOI,EAAgBL,EAAWC,GACpC,IAAK,iBACH,OAAOK,EAAeN,EAAWC,GACnC,IAAK,UACH,OAAOM,EAAQP,EAAWC,GAC5B,QACEO,QAAQC,IAAI,YAKX,IAAMP,EAAU,SAACF,EAAD,GAA2B,IAAbU,EAAY,EAAZA,MAC7BC,EAAcC,EAAeF,GACnC,MAAM,GAAN,mBAAWV,EAAUpG,KAAI,SAACiH,GAAD,mBAAC,eAAYA,GAAb,IAAgBC,OAAO,QAAhD,CAA2DH,KAGhDP,EAAa,SAACJ,EAAD,GAAwB,IAAV1B,EAAS,EAATA,GAChCyC,EAAQC,EAAc1C,EAAI0B,GAChC,MAAM,GAAN,mBAAWA,EAAUnF,MAAM,EAAGkG,IAA9B,YAAyCf,EAAUnF,MAAMkG,EAAQ,MAG7DC,EAAgB,SAAC1C,EAAI2C,GACzB,MACE,CAAC,GAAD,mBAAOA,IAAKC,QACV,SAACC,EAAOC,EAAML,GAAd,OAAyBzC,IAAO8C,EAAK9C,IAAMyC,GAAUI,KACnD,GAIKhB,EAAU,SAACH,EAAD,GAAiC,IAAnB1B,EAAkB,EAAlBA,GAAI+C,EAAc,EAAdA,QACjCN,EAAQC,EAAc1C,EAAI0B,GAC1BiB,EAAMjB,EAAUpG,KAAI,SAACiH,GAAD,mBAAC,eAAYA,GAAb,IAAgBC,OAAO,OAIjD,OAHAG,EAAIF,GAASO,KAAKC,MAAMD,KAAKE,UAAUP,EAAIF,KAC3CE,EAAIF,GAAOlE,KAAOwE,EAClBJ,EAAIF,GAAOD,OAAQ,EACZ,YAAIG,IAGAV,EAAU,SAACP,EAAD,GAAwB,IAAV1B,EAAS,EAATA,GAC7ByC,EAAQC,EAAc1C,EAAI0B,GAC1BiB,EAAMjB,EAAUpG,KAAI,SAACiH,GAAD,mBAAC,eAAYA,GAAb,IAAgBC,OAAO,OAIjD,OAHAG,EAAIF,GAASO,KAAKC,MAAMD,KAAKE,UAAUP,EAAIF,KAC3CE,EAAIF,GAAOU,KAAM,EACjBR,EAAIF,GAAOD,OAAQ,EACZ,YAAIG,IAGAZ,EAAkB,SAACL,EAAD,GAAqC,IAAvB1B,EAAsB,EAAtBA,GAAIoD,EAAkB,EAAlBA,KAAMlJ,EAAY,EAAZA,MAC/CuI,EAAQC,EAAc1C,EAAI0B,GAE1BiB,EAAMjB,EAAUpG,KAAI,SAACiH,GAAD,mBAAC,eAAYA,GAAb,IAAgBC,OAAO,OAKjD,OAJAG,EAAIF,GAASO,KAAKC,MAAMD,KAAKE,UAAUP,EAAIF,KAC9B,aAATW,IAAqBlJ,EAAQmJ,SAASnJ,IAC1CyI,EAAIF,GAAO1F,MAAMqG,GAAQlJ,EACzByI,EAAIF,GAAOD,OAAQ,EACZ,YAAIG,IAGAX,EAAiB,SAACN,EAAD,GAAgC,IAAlB1B,EAAiB,EAAjBA,GAAIsD,EAAa,EAAbA,OACxCb,EAAQC,EAAc1C,EAAI0B,GAC1BiB,EAAMjB,EAAUpG,KAAI,SAACiH,GAAD,mBAAC,eAAYA,GAAb,IAAgBC,OAAO,OAKjD,OAJAG,EAAIF,GAASO,KAAKC,MAAMD,KAAKE,UAAUP,EAAIF,KAC3CE,EAAIF,GAAO1F,MAAM+D,KAAOwC,EAAOxC,KAC/B6B,EAAIF,GAAO1F,MAAMkE,IAAMqC,EAAOrC,IAC9B0B,EAAIF,GAAOD,OAAQ,EACZ,YAAIG,IAGT3C,EAAK,EAEHsC,EAAiB,SAACpC,GACtB,IAAM/E,EDxFO,SAAC+E,GACd,IAAMW,EAAWO,EAAiBlB,EAAEC,QACpC,OAAOS,EAAgBV,EAAGW,GCsFX0C,CAAQrD,GAuBvB,MAtBqB,CACnBF,GAAIA,IACJzB,KAAM,OACNxB,MAAO,CACLY,QAAS,QACT8C,SAAU,WACV+C,OAAQ,MACR5F,MAAO,QACP6F,KAAM,IACNxG,SAAU,GACVyG,OAAQ,OACRC,YAAa,MACbC,YAAa,cACbtE,gBAAiB,cACjBuE,UAAW,GACX/C,KAAM3F,EAAO2F,KACbG,IAAK9F,EAAO8F,KAEdkC,KAAK,EACLX,OAAO,I,oCCvGIjJ,OAAM2E,YAAW,WAAcqB,GAAS,IAApBuE,EAAmB,EAAnBA,QAAmB,EAChB3J,qBAAW4J,IAAvCC,EAD4C,EAC5CA,gBAAiBC,EAD2B,EAC3BA,OACjB1F,EAAoBuF,EAApBvF,KAAMxB,EAAc+G,EAAd/G,MAAOiD,EAAO8D,EAAP9D,GAmBfkE,EAAS,SAAChE,GACd8D,EAAgB,CACd/D,KAAM,iBACND,KACAsD,OAAQ1C,EAAgBV,EAAG+D,MAIzBE,EAAkBC,mBAMxB,OAJAtK,qBAAU,WACRqK,EAAgBE,QAAQ7B,UACvB,IAGD,8BACE8B,UAAU,OACVrC,QAAS,kBAAM+B,EAAgB,CAAE/D,KAAM,UAAWD,QAClDkE,OAAQA,EACRK,UAAWL,EACXjE,KAAK,OACLnC,SA3Ba,SAACoC,IAHC,SAACA,GACjBA,EAAEC,OAAOqE,KAAOC,KAAKC,IAAI,EAAGxE,EAAEC,OAAOjG,MAAMyK,MAAM,MAAMC,QAGxDC,CAAW3E,GAZU,SAACA,GACtB,IAAMwE,EAAMxE,EAAEC,OAAOjG,MAClByK,MAAM,MACNrJ,KAAI,SAACC,GAAD,OAAOA,EAAEqJ,UACbhC,QAAO,SAACC,EAAOiC,GAAR,OAAgBL,KAAKC,IAAI7B,EAAOiC,MAC1C5E,EAAEC,OAAOpD,MAAM0C,MAAQiF,EAAM,EAAI,KAQjCK,CAAe7E,GACf8D,EAAgB,CAAE/D,KAAM,UAAW8C,QAAS7C,EAAEC,OAAOjG,MAAO8F,QAyB1D9F,MAAOqE,EACPxB,MAAOA,EACPwC,IAAK4E,EACLK,KAAK,IACLf,KAAK,SChDI,eAA0B,IAAvBrF,EAAsB,EAAtBA,MAAO1E,EAAe,EAAfA,SACfsK,EAAoB7J,qBAAW4J,IAA/BC,gBAER,OACE,yBACEjH,MAAO,CACLyD,gBAAiB,OAASpC,EAAMzD,IAAM,IACtC0C,OAAQe,EAAMf,OAAS,KACvBoC,MAAOrB,EAAMqB,MAAQ,KACrBgB,SAAU,WACVC,iBAAkB,YAClBC,eAAgB,YAGlB,yBACE5D,MAAO,CAAE0C,MAAO,UAAWpC,OAAQ,WACnC7C,QAAS,SAAC4H,GACR4B,EAAgB,CACd/D,KAAM,UACNmC,MAAO,CACLrB,MAAOqB,EAAMrB,MACbZ,OAAQiC,EAAMjC,OACde,MAAOkB,EAAMlB,YAKpBxH,IC7BQsL,GCOAzL,IAAM2E,YAAW,WAAuBqB,GAAS,IAA7BnB,EAA4B,EAA5BA,MAAOhE,EAAqB,EAArBA,UAAqB,EAChCD,qBAAW4J,IAAhCrC,EADqD,EACrDA,UAAWuD,EAD0C,EAC1CA,MAEbC,EAAYxD,EAAUpG,KAAI,SAACwI,EAASqB,GAAV,OAC9B,kBAACC,GAAD,CAAUC,IAAKF,EAAGrB,QAASA,OAGvBwB,EAAS,CACbC,WAAYN,EAAMhE,IAAM,KACxB3B,gBAAiB2F,EAAMO,UAEnBC,EAAY,CAChBC,cAAeT,EAAMU,OAAS,KAC9BrG,gBAAiB2F,EAAMW,aAGzB,OACE,yBAAKrG,IAAKA,EAAKnF,UAAWC,KAAOQ,KAAO,IAAMT,GAC5C,yBAAK2C,MAAOuI,IACZ,kBAAC,GAAD,CAAWlH,MAAOA,GAAlB,IAA2B8G,GAC3B,yBAAKnI,MAAO0I,Q,wCCvBH,eAAmB,IAAhBI,EAAe,EAAfA,SACR7B,EAAoB7J,qBAAW4J,IAA/BC,gBAEF8B,EAAYD,GAAYA,EAAStH,MAAS,mBAC1CwH,EACJF,GACC,kBAAM7B,EAAgB,CAAE/D,KAAM,aAAcD,GAAI6F,EAAS7F,MAEtDgG,EACHH,GACE,SAACI,GAAD,OAAc,SAAC/F,GAAD,OACb8D,EAAgB,CACd/D,KAAM,kBACND,GAAI6F,EAAS7F,GACboD,KAAM6C,EACN/L,MAAOgG,EAAEC,OAAOjG,WAErB,aACH,OACE,yBAAKE,UAAWyL,EAAW,GAAKxL,KAAO6L,SACrC,6BACE,wBAAI9L,UAAWC,KAAOyL,UACnBA,EACD,yBACE1L,UAAWC,KAAO8L,aAClBxL,IAAI,mCACJH,QAASuL,EACTnL,IAAI,aAIV,wCAEG,CACC,QACA,kBACA,WACA,YACA,gBACA,cACAU,KAAI,SAAC2K,EAAUd,GAAX,OACJ,yBAAKE,IAAKF,EAAG/K,UAAWC,KAAO+L,WAC7B,2BAAOtG,QAASqF,EAAI,YAApB,IAAkCc,GAClC,6BACA,2BACEjG,GAAImF,EAAI,WACR/K,UAAWC,KAAOgM,eAClBnM,MAAO2L,GAAYA,EAAS9I,MAAMkJ,GAClCnI,SAAUkI,EAAaC,YCjDtB,eAAsB,IAAnBK,EAAkB,EAAlBA,YAAkB,EACNnM,qBAAW4J,IAA/BkB,EAD0B,EAC1BA,MAAOsB,EADmB,EACnBA,SAEThE,EAAI+D,EACJE,EAASF,EAAc,QAEvBG,EAAM,SAACC,GAAD,OAAc,SAACxG,GACzB,IAAMyG,EAAC,eAAQ1B,GACf0B,EAAED,GAAYxG,EAAEC,OAAOjG,MACvBqM,EAASI,KAGX,OACE,yBAAKvM,UAAWC,KAAO+L,WAAvB,OACOE,EADP,WAEE,6BACA,2BACErG,KAAK,QACL2G,IAAI,IACJlC,IAAI,MACJxK,MAAO+K,EAAM1C,GACbzE,SAAU2I,EAAIlE,GACdnI,UAAWC,KAAOgM,iBAEpB,6BAXF,SAaE,6BACA,2BACEjM,UAAWC,KAAOgM,eAClBpG,KAAK,OACL/F,MAAO+K,EAAMuB,GACb1I,SAAU2I,EAAID,OClCPK,OCQA,YAAwD,IAArCvI,EAAoC,EAApCA,YAAaD,EAAuB,EAAvBA,SAAUjE,EAAa,EAAbA,UAGjDyL,EAFgB1L,qBAAW4J,IAAzBrC,UAEmBoF,QAAO,SAACvL,GAAD,OAAOA,EAAEiH,SAAO,GAElD,OACE,yBAAKpI,UAAWC,KAAOwF,QAAU,IAAMzF,GACrC,2BAAO0F,QAAQ,OAAf,gBACA,2BACEE,GAAG,MACHC,KAAK,OACL/F,MAAOmE,EACPP,SAAU,SAACoC,GACT5B,EAAY4B,EAAEC,OAAOjG,UAGzB,kBAAC6M,GAAD,CAAeT,YAAa,QAC5B,yBAAKlM,UAAWC,KAAO2M,kBACrB,kBAACC,GAAD,CAAiBpB,SAAUA,KAE7B,kBAACkB,GAAD,CAAeT,YAAa,aChBrBvC,GAAmBxK,IAAMC,cAAc,IAErCD,OAAM2E,YACnB,WAAmCC,GAAkB,IAAlDC,EAAiD,EAAjDA,MAAOE,EAA0C,EAA1CA,YAAaD,EAA6B,EAA7BA,SAA6B,ETZ7C6I,qBAAWzF,EAAS,ISYyB,mBAC3CC,EAD2C,KAChCsC,EADgC,KAG5CC,EAASkD,GAAiBzF,EAAWvD,GAE3CiJ,GAAsB1F,EAAWsC,GALiB,MAOxBrK,mBAAS,CACjCsH,IAAK,IACLuE,SAAU,QACVG,OAAQ,IACRC,YAAa,UAXmC,mBAO3CX,EAP2C,KAOpCsB,EAPoC,KAclD,OACE,yBAAKnM,UAAWC,IAAOC,MACrB,kBAACyJ,GAAiB9J,SAAlB,CACEC,MAAO,CACL+K,QACAsB,WACA7E,UAAWA,EACXsC,kBACAC,WAGF,yBAAK7J,UAAWC,IAAOgN,YACrB,kBAAC,GAAD,CAAM9H,IAAKpB,EAAcC,MAAOA,KAElC,kBAAC,GAAD,CACEhE,UAAWC,IAAOiN,SAClBC,aAAcpJ,EACdG,YAAaA,EACbD,SAAUA,SAQhB+I,GAAwB,SAAC1F,EAAWsC,GAAqB,IACrDhK,EAAeG,qBAAWb,GAA1BU,WAERF,qBAAU,WACR0N,MACC,CAAC9F,IAEJ,IAAM8F,EAAoB,YACnBxN,GAAc0H,EAAUkD,SAC3BZ,EAAgB,CAAE/D,KAAM,aAAcD,GAAI0B,EAAU,GAAG1B,KACvDyH,MAAM,kEAKNN,GAAmB,SAACzF,EAAWvD,GAAkB,IAAD,EACxBxE,mBAAS,CACnCqH,gBAAiB,EACjBG,eAAgB,IAHkC,mBAC7C8C,EAD6C,KACrCyD,EADqC,KAMpD5N,qBAAU,WACR6N,MACC,CAACjG,IAEJ,IAAMiG,EAAe,WACfxJ,EAAakG,SACfqD,EAAUtG,EAAiBjD,EAAakG,WAG5C,OAAOJ,GCrFM2D,M,yCCkBAC,OAlBf,SAAqBxG,EAAMhD,GACzByJ,KACGC,MAAM1G,GACNrG,MAAK,SAAUgN,IAQpB,SAAsBA,EAASC,GAC7B,IAAIC,EAAOC,SAASC,cAAc,KAClCF,EAAKG,SAAYJ,GAAQA,EAAO,QAAW,WAC3CC,EAAKI,KAAON,EACZE,EAAKK,QAXDC,CAAaR,EAAS3J,MAEvB5C,OAAM,SAAUC,GACfwG,QAAQxG,MAAM,8BAA+BA,OC8BpC+M,GAjCH,SAAC,GAA0C,IAAxCtK,EAAuC,EAAvCA,aAAcuK,EAAyB,EAAzBA,SAAUrK,EAAe,EAAfA,SAAe,EACxB1E,oBAAS,GADe,mBAC7CgP,EAD6C,KACrCC,EADqC,KAGpD,OACE,yBAAKxO,UAAWC,KAAOwO,cACpBF,GAAU,kBAAC,IAAD,CAAU/M,GAAG,kBACxB,4BAAQxB,UAAWC,KAAOwB,UAAWrB,QAAS,kBAAMoO,GAAWD,KAA/D,QAGA,4BAAQvO,UAAWC,KAAOwB,WACxB,2BAAOiE,QAAQ,SAAf,oBAEF,2BACEE,GAAG,QACHC,KAAK,OACLgI,KAAK,aACLa,OAAO,wBACPhL,SAAU4K,EACV3L,MAAO,CAAEY,QAAS,UAEpB,4BACEvD,UAAWC,KAAOwB,UAClBrB,QAAS,WACPqN,GAAY1J,EAAakG,QAAShG,KAHtC,iBAQA,kBAACvC,EAAD,QC9BAiN,GAAW,IAAIC,MACrBD,GAASpO,IAHW,wCAKL,IAwBF+I,GAAS,SAACuF,EAAKC,GAC1B,IAAMC,EAAWD,GAAO,IACxB,GAAID,EAAI5L,OAAS8L,GAAYF,EAAIxJ,MAAQ0J,EAAU,CACjD,IAAMC,EAAQH,EAAI5L,OAAS4L,EAAIxJ,MAE3BwJ,EAAI5L,OAAS4L,EAAIxJ,OACnBwJ,EAAI5L,OAAS8L,EACbF,EAAIxJ,MAAQ0J,EAAWC,IAEvBH,EAAIxJ,MAAQ0J,EACZF,EAAI5L,OAAS8L,EAAWC,GAI5B,OAAOH,GCiBHI,GAAgB,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,mBAAyB,EACZ3P,mBAAS,IADG,mBACzC4P,EADyC,KAC7BC,EAD6B,KAGhD1P,qBAAU,WACRiB,MAAM,sCACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACLsO,YAAW,WACT,IAAMjN,EAASrB,EAAOC,KAAKC,MAAMC,KAAI,SAACC,GACpC,IAAM0N,EAAM,IAAID,MAEhB,OADAC,EAAItO,IAAMY,EAAEC,IACLkI,GAAOuF,EAAK,QAGrBO,EAAchN,KACb,MAEJf,OAAM,SAACC,GACNwG,QAAQC,IAAIzG,QAEf,IAEH,IAAMc,EAAS+M,EAAWjO,KAAI,SAAC2N,EAAK9D,GAAN,OAC5B,yBACEE,IAAKF,EACL/K,UAAWC,IAAOqP,QAClBlP,QAAS8O,EACT3O,IAAKsO,EAAItO,IACToC,MAAO,CACL0C,MAAOwJ,EAAIxJ,MAAQ,KACnBpC,OAAQ4L,EAAI5L,OAAS,MAEvBzC,IAAI,WAIR,OACE,yBAAKR,UAAWC,IAAOsP,iBACrB,yBAAKvP,UAAWC,IAAOuP,sBAAvB,IAA+CpN,KAKtCqN,GA3FI,WAAO,IAAD,EDPV,WAAO,IAAD,EACOlQ,mBAASoP,IADhB,mBACZ3K,EADY,KACL0L,EADK,KAGbC,EAAY,SAACd,GACjBQ,YAAW,WACTR,EAAMvF,GAAOuF,GACbQ,YAAW,WACTK,EAASb,KACR,OAaP,MAAO,CAAE7K,QAAOsK,SATC,SAACxI,GAChB,IAAM8J,EAAS,IAAIC,WACnBD,EAAOE,OAAS,SAAChK,GACf,IAAM+I,EAAM,IAAID,MAChBC,EAAItO,IAAMuF,EAAEC,OAAOhF,OACnB4O,EAAUd,IAEZe,EAAOG,cAAcjK,EAAEC,OAAOiK,MAAM,KAEZN,WAAUC,aCbGM,GAA/BjM,EADe,EACfA,MAAOsK,EADQ,EACRA,SAAUqB,EADF,EACEA,UACjBO,EAAaC,cAAbD,SAFe,EAIS3Q,mBAAS,QAJlB,mBAIhB0E,EAJgB,KAINC,EAJM,KAajBH,EAAeiG,mBAIrB,OAFA+D,SAASpM,MAAQ,sBAGf,yBAAK3B,UAAWC,IAAOmQ,QACrB,kBAAC,GAAD,CACEpQ,UAAWC,IAAOoQ,IAClBtM,aAAcA,EACduK,SAAUA,EACVrK,SAAUA,IAGZ,kBAAC,GAAD,CAAeiL,mBApBQ,SAACpJ,GAC1B6J,EAAU,CACRpP,IAAKuF,EAAEC,OAAOxF,IACd0C,OAA0B,IAAlB6C,EAAEC,OAAO9C,OACjBoC,MAAwB,IAAjBS,EAAEC,OAAOV,WAiBhB,yBAAKrF,UAAWC,IAAOoD,eACN,cAAb6M,GACA,kBAAC,GAAD,CACE/K,IAAKpB,EACLG,YAAaA,EACbD,SAAUA,EACVD,MAAOA,KAGT,kBAACsM,EAAD,CACEnL,IAAKpB,EACLG,YAAaA,EACbD,SAAUA,EACVD,MAAOA,OCpBJuM,OApBf,WACE,OACE,kBAAC,EAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,0BACV,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,gBACV,kBAACC,EAAD,OAEF,kBAAC,IAAD,CAAOD,KAAK,KACV,kBAAC,IAAD,CAAUhP,GAAG,sBCdLkP,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFlD,SAASmD,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBzQ,MAAK,SAAA0Q,GACJA,EAAaC,gBAEdlQ,OAAM,SAAAC,GACLwG,QAAQxG,MAAMA,EAAMkQ,a,mBExI5B1T,EAAOC,QAAU,CAAC,OAAS,2BAA2B,IAAM,wBAAwB,cAAgB,kCAAkC,OAAS,2BAA2B,gBAAkB,oCAAoC,qBAAuB,yCAAyC,QAAU,8B,mBCA1SD,EAAOC,QAAU,CAAC,gBAAkB,wCAAwC,KAAO,6BAA6B,KAAO,6BAA6B,WAAa,qC,mBCAjKD,EAAOC,QAAU,CAAC,aAAe,0BAA0B,UAAY,uBAAuB,QAAU,uB,mBCAxGD,EAAOC,QAAU,CAAC,cAAgB,mCAAmC,OAAS,8B,mBCA9ED,EAAOC,QAAU,CAAC,cAAgB,iCAAiC,SAAW,4BAA4B,WAAa,8BAA8B,KAAO,0B,kBCA5JD,EAAOC,QAAU,CAAC,cAAgB,iCAAiC,cAAgB,iCAAiC,UAAY,6BAA6B,mBAAqB,sCAAsC,WAAa,8BAA8B,QAAU,2BAA2B,QAAU,2BAA2B,aAAe,gCAAgC,OAAS,0BAA0B,IAAM,uBAAuB,MAAQ,yBAAyB,QAAU,6B,mBCAveD,EAAOC,QAAU,CAAC,QAAU,4B","file":"static/js/main.57951c89.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"meme\":\"Meme_meme__2xLyP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"intropage_component__2Eph7\",\"navButton\":\"intropage_navButton__2JYv6\",\"glowing\":\"intropage_glowing__2Y0Ic\",\"memeSelectionContainer\":\"intropage_memeSelectionContainer__2bWuf\",\"linkMemeTypes\":\"intropage_linkMemeTypes__3LdM_\",\"memeTypesImg\":\"intropage_memeTypesImg__1jzvQ\",\"titleExample\":\"intropage_titleExample__3i1C4\",\"imgContainer\":\"intropage_imgContainer__1SqrB\",\"images\":\"intropage_images__1BZ0z\"};","module.exports = __webpack_public_path__ + \"static/media/memeTextInside.acf0d59b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/memeTextOutside.92bae5a2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/memeFreestyle.8d5a158d.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"styleOptions\":\"FontButtons_styleOptions__3giQ8\",\"fontButtonContainer\":\"FontButtons_fontButtonContainer__1e5e0\",\"sizeButtons\":\"FontButtons_sizeButtons__3xlc_\",\"Button\":\"FontButtons_Button__2q4u4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headline\":\"memeOptions_headline__dTpjR\",\"removeButton\":\"memeOptions_removeButton__2fnZL\",\"opacity\":\"memeOptions_opacity__3PPa-\",\"cssOption\":\"memeOptions_cssOption__2JErP\",\"cssOptionInput\":\"memeOptions_cssOptionInput__2gnl-\"};","import firebase from \"firebase\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyAUT429SZZhzKtWu84CWyZTlLcEVJGz8vA\",\r\n  authDomain: \"memecreator-c2665.firebaseapp.com\",\r\n  databaseURL: \"https://memecreator-c2665.firebaseio.com\",\r\n  projectId: \"memecreator-c2665\",\r\n  storageBucket: \"memecreator-c2665.appspot.com\",\r\n  messagingSenderId: \"634063807183\",\r\n  appId: \"1:634063807183:web:567101b2f2402719fb4dba\",\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const auth = firebase.auth;\r\n\r\nexport function signInWithGoogle() {\r\n  const provider = new auth.GoogleAuthProvider();\r\n  return auth().signInWithPopup(provider);\r\n}\r\n\r\nexport function signInWithGitHub() {\r\n  const provider = new auth.GithubAuthProvider();\r\n  return auth().signInWithPopup(provider);\r\n}\r\n\r\nexport function logOut() {\r\n  auth().signOut();\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { auth } from \"service/firebase\";\r\n\r\nexport const AuthContext = React.createContext();\r\n\r\nexport const AuthContextProvider = ({ children }) => {\r\n  const [user, setUser] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    auth().onAuthStateChanged((user) => {\r\n      setUser(user);\r\n    });\r\n  }, []);\r\n\r\n  const authorized = user ? true : false;\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ authorized, user }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\n// make x more visible\r\n","import React, { useContext } from \"react\";\r\n\r\nimport { logOut, signInWithGoogle, signInWithGitHub } from \"service/firebase\";\r\n\r\nimport { AuthContext } from \"context/Auth\";\r\nimport styles from \"./FireBaseSignIn.module.css\";\r\n\r\nexport default () => {\r\n  const { authorized, user } = useContext(AuthContext);\r\n\r\n  return (\r\n    <div className={styles.body}>\r\n      {(authorized && (\r\n        <span>\r\n          {user.email} <button onClick={logOut}> Logout</button>\r\n        </span>\r\n      )) || (\r\n        <>\r\n          <span>Sign in with </span>\r\n          <button className={styles.iconButton} onClick={signInWithGoogle}>\r\n            <img\r\n              className={styles.icon}\r\n              src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\"\r\n              alt=\"Google\"\r\n            ></img>\r\n          </button>\r\n          <button className={styles.iconButton} onClick={signInWithGitHub}>\r\n            <img\r\n              className={styles.icon}\r\n              src={\"/memeCreator/src/icon/gitHub.png\"}\r\n              alt=\"github\"\r\n            ></img>\r\n          </button>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styles from \"./intropage.module.css\";\r\n\r\nimport FireBaseSignIn from \"components/FireBaseSignIn\";\r\n\r\nexport default () => {\r\n  const [meme, setMeme] = useState([]);\r\n  useEffect(() => {\r\n    fetch(\" https://api.imgflip.com/get_memes\")\r\n      .then((response) => response.json())\r\n      .then((result) => {\r\n        setMeme(result.data.memes.map((x) => x.url)); // <-- this is an array of urls\r\n      })\r\n      .catch((error) => {});\r\n  }, []);\r\n\r\n  return (\r\n    <div className={styles.component}>\r\n      <nav>\r\n        <Link to=\"/memeCreator/textInOfImage\">\r\n          <button className={styles.navButton}>\r\n            <span>Top/Bottom Text Meme</span>\r\n          </button>\r\n        </Link>\r\n        <Link to=\"/memeCreator/freestyle\">\r\n          <button className={styles.navButton}>\r\n            <span>FreeStyle Meme</span>\r\n          </button>\r\n        </Link>\r\n        <FireBaseSignIn />\r\n      </nav>\r\n      <h1 className={styles.title}>Welcome to the Meme creator</h1>\r\n      <div className={styles.memeSelectionContainer}>\r\n        <Link className={styles.linkMemeTypes} to=\"/memeCreator/textInOfImage\">\r\n          <h2>Top/Bottom Text</h2>\r\n          <p>\r\n            Design a meme with a top and a Bottom text! You can custumize if the\r\n            text is inside or Outside the meme\r\n          </p>\r\n          <div className={styles.memeImgCont}>\r\n            <img\r\n              className={styles.memeTypesImg}\r\n              src={require(\"./memeTextInside.jpg\")}\r\n              alt=\"memeTextInside\"\r\n            ></img>\r\n            <img\r\n              className={styles.memeTypesImg}\r\n              src={require(\"./memeTextOutside.jpg\")}\r\n              alt=\"memeTextOutside\"\r\n            ></img>\r\n          </div>\r\n        </Link>\r\n        <Link className={styles.linkMemeTypes} to=\"/memeCreator/freestyle\">\r\n          <h2>FreeStyle</h2>\r\n          <p>\r\n            Put your text wherever you want in the meme! Try this awesome\r\n            freestyle editor.\r\n          </p>\r\n\r\n          <img\r\n            className={styles.memeTypesImg}\r\n            src={require(\"./memeFreestyle.jpg\")}\r\n            alt=\"serious\"\r\n          ></img>\r\n        </Link>\r\n      </div>\r\n      <h2 className={styles.titleExample}>\r\n        Examples Images you can use for your memes\r\n      </h2>\r\n      <div className={styles.imgContainer}>\r\n        {meme.slice(0, 9).map((x) => (\r\n          <img className={styles.images} src={x} alt=\"img1\"></img>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nimport styles from \"./index.module.css\";\r\n\r\nconst FontButtons = (props) => {\r\n  return (\r\n    <div className={styles.styleOptions}>\r\n      {/* Buttons for the Font family */}\r\n      <div className={styles.fontButtonContainer}>\r\n        <button\r\n          className={styles.Button}\r\n          onClick={() => props.setFont(\"Georgia, serif\")}\r\n          style={{\r\n            fontFamily: \"Georgia, serif\",\r\n            fontSize: 15 + \"px\",\r\n          }}\r\n        >\r\n          Georgia\r\n        </button>\r\n        <button\r\n          className={styles.Button}\r\n          onClick={() => props.setFont(\"Arial Black\")}\r\n          style={{ fontFamily: \"Arial Black\", fontSize: 13 + \"px\" }}\r\n        >\r\n          Arial Black\r\n        </button>\r\n        <button\r\n          className={styles.Button}\r\n          onClick={() => props.setFont(\"monospace\")}\r\n          style={{ fontFamily: \"monospace\" }}\r\n        >\r\n          Monospace\r\n        </button>\r\n        <button\r\n          className={styles.Button}\r\n          onClick={() => props.setFont(\"Comic Sans MS\")}\r\n          style={{ fontFamily: \"Comic Sans MS\" }}\r\n        >\r\n          Comic Sans\r\n        </button>\r\n        <button\r\n          className={styles.Button}\r\n          onClick={() => props.setFont(\"cursive\")}\r\n          style={{ fontFamily: \"cursive\" }}\r\n        >\r\n          Cursive\r\n        </button>\r\n        {/* Buttons for the size */}\r\n        <div className={styles.sizeButtons}>\r\n          <button\r\n            className={styles.Button}\r\n            onClick={() => props.setSize(props.letterSize + 1)}\r\n            style={{ fontSize: \"15px\", height: \"35px\" }}\r\n          >\r\n            A+\r\n          </button>\r\n          <button\r\n            className={styles.Button}\r\n            onClick={() => props.setSize(props.letterSize - 1)}\r\n            style={{ fontSize: \"10px\", height: \"35px\" }}\r\n          >\r\n            A-\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FontButtons;\r\n","import React, { useState } from \"react\";\r\nimport { ChromePicker } from \"react-color\";\r\nimport styles from \"./index.module.css\";\r\n\r\nconst ColorPicker = (props) => {\r\n  const [showColorPicker, setShowColorPicker] = useState(false);\r\n  return (\r\n    <div className={styles.bodyContainer}>\r\n      <button\r\n        className={styles.Button}\r\n        onClick={() =>\r\n          setShowColorPicker((showColorPicker) => !showColorPicker)\r\n        }\r\n      >\r\n        {showColorPicker ? \"Close\" : \"Text Color\"}\r\n      </button>\r\n      <div\r\n        className={styles.ChromePickerContainer}\r\n        style={!showColorPicker ? { display: \"none\" } : null}\r\n      >\r\n        <ChromePicker\r\n          color={props.currentColor}\r\n          onChange={(updatedColor) => props.setColor(updatedColor.hex)}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ColorPicker;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport styles from \"./index.module.css\";\r\n\r\n// import downloadImg from \"../downloadImg\";\r\n\r\nimport FontButtons from \"./FontButtons\";\r\n\r\nimport ColorPicker from \"./ColorPicker\";\r\n\r\nexport default React.forwardRef(\r\n  ({ image, memeName, setMemeName }, imageNodeRef) => {\r\n    const [topText, setTopText] = useState({ text: \"top text\", inner: true });\r\n    const [bottomText, setBottomText] = useState({\r\n      text: \"bottom text\",\r\n      inner: true,\r\n    });\r\n\r\n    const [fontText, setFontText] = useState(\"\");\r\n\r\n    const [fontSize, setFontSize] = useState(12);\r\n\r\n    const [textColor, setTextColor] = useState(\"black\");\r\n\r\n    const getInnerStyle = (text, font, SizeOfFont) => {\r\n      return {\r\n        display: text.inner ? \"block\" : \"none\",\r\n        color: textColor,\r\n        fontFamily: font,\r\n        fontSize: SizeOfFont,\r\n      };\r\n    };\r\n    // Function that create the top text section\r\n    const getOuterStyle = (text, font, SizeOfFont) => {\r\n      return {\r\n        display: !text.inner ? \"block\" : \"none\",\r\n        color: textColor,\r\n        backgroundColor: text.inner ? \"transparent\" : \"white\",\r\n        fontFamily: font,\r\n        fontSize: SizeOfFont,\r\n      };\r\n    };\r\n\r\n    return (\r\n      <div className={styles.bodyContainer}>\r\n        <div\r\n          ref={imageNodeRef}\r\n          className={styles.memeContainer}\r\n          style={{\r\n            height: image.height + \"px\",\r\n            width: image.width + \"px\",\r\n          }}\r\n        >\r\n          <div\r\n            style={getOuterStyle(topText, fontText, fontSize)}\r\n            className={styles.textTop}\r\n          >\r\n            {topText.text}\r\n          </div>\r\n\r\n          <MemeImage image={image} onClick={() => {}}>\r\n            <div\r\n              style={getInnerStyle(topText, fontText, fontSize)}\r\n              className={styles.textTop}\r\n            >\r\n              {topText.text}\r\n            </div>\r\n            {/* This span prevents that the bottom text to go up when the top text is outside of the image */}\r\n            <span></span>\r\n\r\n            {/* Inside Bottom text */}\r\n            <div\r\n              style={getInnerStyle(bottomText, fontText, fontSize)}\r\n              className={styles.textBottom}\r\n            >\r\n              {bottomText.text}\r\n            </div>\r\n          </MemeImage>\r\n          <div\r\n            style={getOuterStyle(bottomText, fontText, fontSize)}\r\n            className={styles.textBottom}\r\n          >\r\n            {bottomText.text}\r\n          </div>\r\n        </div>\r\n\r\n        <div className={styles.options}>\r\n          {/* Text Input. Top and Bottom */}\r\n          <label htmlFor=\"inp\" className={styles.inp}>\r\n            <input\r\n              id=\"inp\"\r\n              type=\"text\"\r\n              value={topText.text}\r\n              onChange={(e) => {\r\n                setTopText({ ...topText, text: e.target.value });\r\n              }}\r\n            />\r\n            <span className={styles.label}>Top Text</span>\r\n            <span className={styles.focusBg}></span>\r\n          </label>\r\n          <label htmlFor=\"inp2\" className={styles.inp}>\r\n            <input\r\n              id=\"inp2\"\r\n              type=\"text\"\r\n              value={bottomText.text}\r\n              onChange={(e) => {\r\n                setBottomText({ ...bottomText, text: e.target.value });\r\n              }}\r\n            />\r\n            <span className={styles.label}>Bottom Text</span>\r\n            <span className={styles.focusBg}></span>\r\n          </label>\r\n\r\n          {/* Button to Change Top text position */}\r\n          <button\r\n            className={styles.Button}\r\n            onClick={() => setTopText({ ...topText, inner: !topText.inner })}\r\n          >\r\n            Top in/out\r\n          </button>\r\n\r\n          {/* Button to Change Bottom text position */}\r\n          <button\r\n            className={styles.Button}\r\n            onClick={() =>\r\n              setBottomText({ ...bottomText, inner: !bottomText.inner })\r\n            }\r\n          >\r\n            bottom in/out\r\n          </button>\r\n          <label htmlFor=\"inp3\" className={styles.inp}>\r\n            <input\r\n              id=\"inp3\"\r\n              type=\"text\"\r\n              value={memeName}\r\n              onChange={(e) => {\r\n                setMemeName(e.target.value);\r\n              }}\r\n            />\r\n            <span className={styles.label}>Meme Name</span>\r\n            <span className={styles.focusBg}></span>\r\n          </label>\r\n        </div>\r\n\r\n        <div className={styles.fontStyleContainer}>\r\n          <FontButtons\r\n            setFont={setFontText}\r\n            setSize={setFontSize}\r\n            letterSize={fontSize}\r\n          ></FontButtons>\r\n          <ColorPicker setColor={setTextColor} currentColor={textColor} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nconst MemeImage = React.forwardRef(({ image, children }, imageNodeRef) => {\r\n  return (\r\n    <div\r\n      ref={imageNodeRef}\r\n      className={styles.memeImage}\r\n      style={{\r\n        backgroundImage: \"url(\" + image.src + \")\",\r\n        height: image.height + \"px\",\r\n        width: image.width + \"px\",\r\n        position: \"relative\",\r\n        backgroundRepeat: \"no-repeat\",\r\n        backgroundSize: \"contain\",\r\n      }}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n});\r\n","export default (e) => {\r\n  const relation = getTotalLocation(e.target);\r\n  return calcRelativePos(e, relation);\r\n};\r\n\r\nexport const calcRelativePos = (e, relation) => {\r\n  const x = e.pageX - relation.totalOffsetLeft;\r\n  const y = e.pageY - relation.totalOffsetTop;\r\n  const left = x + \"px\";\r\n  const top = y + \"px\";\r\n  return { left, top };\r\n};\r\n\r\nexport const getTotalLocation = (node) => {\r\n  let totalOffsetLeft = node.offsetLeft;\r\n  let totalOffsetTop = node.offsetTop;\r\n  while (node.offsetParent) {\r\n    node = node.offsetParent;\r\n\r\n    totalOffsetLeft += node.offsetLeft;\r\n    totalOffsetTop += node.offsetTop;\r\n  }\r\n  return { totalOffsetLeft, totalOffsetTop };\r\n};\r\n","import { useReducer } from \"react\";\r\n\r\nimport calcPos from \"./calcPos\";\r\n\r\nexport default () => {\r\n  return useReducer(reducer, []);\r\n};\r\n\r\nfunction reducer(memeTexts, action) {\r\n  switch (action.type) {\r\n    case \"addText\":\r\n      return addText(memeTexts, action);\r\n    case \"setText\":\r\n      return setText(memeTexts, action);\r\n    case \"removeText\":\r\n      return removeText(memeTexts, action);\r\n    case \"changeTextStyle\":\r\n      return changeTextStyle(memeTexts, action);\r\n    case \"changePosition\":\r\n      return changePosition(memeTexts, action);\r\n    case \"onFocus\":\r\n      return onFocus(memeTexts, action);\r\n    default:\r\n      console.log(\"default\");\r\n      break;\r\n  }\r\n}\r\n\r\nexport const addText = (memeTexts, { event }) => {\r\n  const newMemeText = getNewMemeText(event);\r\n  return [...memeTexts.map((v) => ({ ...v, focus: false })), newMemeText];\r\n};\r\n\r\nexport const removeText = (memeTexts, { id }) => {\r\n  const index = findIndexById(id, memeTexts);\r\n  return [...memeTexts.slice(0, index), ...memeTexts.slice(index + 1)];\r\n};\r\n\r\nconst findIndexById = (id, arr) => {\r\n  return (\r\n    [0, ...arr].reduce(\r\n      (total, next, index) => (id === next.id && index) || total\r\n    ) - 1\r\n  );\r\n};\r\n\r\nexport const setText = (memeTexts, { id, newText }) => {\r\n  const index = findIndexById(id, memeTexts);\r\n  const arr = memeTexts.map((v) => ({ ...v, focus: false }));\r\n  arr[index] = JSON.parse(JSON.stringify(arr[index]));\r\n  arr[index].text = newText;\r\n  arr[index].focus = true;\r\n  return [...arr];\r\n};\r\n\r\nexport const onFocus = (memeTexts, { id }) => {\r\n  const index = findIndexById(id, memeTexts);\r\n  const arr = memeTexts.map((v) => ({ ...v, focus: false }));\r\n  arr[index] = JSON.parse(JSON.stringify(arr[index]));\r\n  arr[index].new = false;\r\n  arr[index].focus = true;\r\n  return [...arr];\r\n};\r\n\r\nexport const changeTextStyle = (memeTexts, { id, prop, value }) => {\r\n  const index = findIndexById(id, memeTexts);\r\n\r\n  const arr = memeTexts.map((v) => ({ ...v, focus: false }));\r\n  arr[index] = JSON.parse(JSON.stringify(arr[index]));\r\n  if (prop === \"fontSize\") value = parseInt(value);\r\n  arr[index].style[prop] = value;\r\n  arr[index].focus = true;\r\n  return [...arr];\r\n};\r\n\r\nexport const changePosition = (memeTexts, { id, newPos }) => {\r\n  const index = findIndexById(id, memeTexts);\r\n  const arr = memeTexts.map((v) => ({ ...v, focus: false }));\r\n  arr[index] = JSON.parse(JSON.stringify(arr[index]));\r\n  arr[index].style.left = newPos.left;\r\n  arr[index].style.top = newPos.top;\r\n  arr[index].focus = true;\r\n  return [...arr];\r\n};\r\n\r\nlet id = 0;\r\n\r\nconst getNewMemeText = (e) => {\r\n  const result = calcPos(e);\r\n  const new_MemeText = {\r\n    id: id++,\r\n    text: \"text\",\r\n    style: {\r\n      display: \"block\",\r\n      position: \"absolute\",\r\n      zIndex: \"100\",\r\n      color: \"white\",\r\n      cols: \"4\",\r\n      fontSize: 30,\r\n      resize: \"none\",\r\n      borderWidth: \"0px\",\r\n      borderColor: \"transparent\",\r\n      backgroundColor: \"transparent\",\r\n      transform: \"\",\r\n      left: result.left,\r\n      top: result.top,\r\n    },\r\n    new: true,\r\n    focus: true,\r\n  };\r\n\r\n  return new_MemeText;\r\n};\r\n","import React, { useRef, useEffect, useContext } from \"react\";\r\n\r\nimport { MemeTextsContext } from \"../index\";\r\nimport { calcRelativePos } from \"../calcPos\";\r\n\r\nexport default React.forwardRef(({ element }, ref) => {\r\n  const { reduceMemeTexts, offset } = useContext(MemeTextsContext);\r\n  const { text, style, id } = element;\r\n\r\n  const expandWithText = (e) => {\r\n    const max = e.target.value\r\n      .split(\"\\n\")\r\n      .map((x) => x.length)\r\n      .reduce((total, num) => Math.max(total, num));\r\n    e.target.style.width = max + 2 + \"ch\";\r\n  };\r\n\r\n  const adjustRows = (e) =>\r\n    (e.target.rows = Math.max(1, e.target.value.split(\"\\n\").length));\r\n\r\n  const onChange = (e) => {\r\n    adjustRows(e);\r\n    expandWithText(e);\r\n    reduceMemeTexts({ type: \"setText\", newText: e.target.value, id });\r\n  };\r\n\r\n  const onDrag = (e) => {\r\n    reduceMemeTexts({\r\n      type: \"changePosition\",\r\n      id,\r\n      newPos: calcRelativePos(e, offset),\r\n    });\r\n  };\r\n\r\n  const focusedMemeText = useRef();\r\n\r\n  useEffect(() => {\r\n    focusedMemeText.current.focus();\r\n  }, []);\r\n\r\n  return (\r\n    <textarea\r\n      draggable=\"true\"\r\n      onFocus={() => reduceMemeTexts({ type: \"onFocus\", id })}\r\n      onDrag={onDrag}\r\n      onDragEnd={onDrag}\r\n      type=\"text\"\r\n      onChange={onChange}\r\n      value={text}\r\n      style={style}\r\n      ref={focusedMemeText}\r\n      rows=\"1\"\r\n      cols=\"4\"\r\n    />\r\n  );\r\n});\r\n","import React, { useContext } from \"react\";\r\n\r\nimport { MemeTextsContext } from \"../index\";\r\n\r\nexport default ({ image, children }) => {\r\n  const { reduceMemeTexts } = useContext(MemeTextsContext);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        backgroundImage: \"url(\" + image.src + \")\",\r\n        height: image.height + \"px\",\r\n        width: image.width + \"px\",\r\n        position: \"relative\",\r\n        backgroundRepeat: \"no-repeat\",\r\n        backgroundSize: \"contain\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{ width: \"inherit\", height: \"inherit\" }}\r\n        onClick={(event) => {\r\n          reduceMemeTexts({\r\n            type: \"addText\",\r\n            event: {\r\n              pageX: event.pageX,\r\n              target: event.target,\r\n              pageY: event.pageY,\r\n            },\r\n          });\r\n        }}\r\n      ></div>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n","import Meme from \"./Meme\";\r\n\r\nexport default Meme;\r\n","import React, { useContext } from \"react\";\r\n\r\nimport { MemeTextsContext } from \"../index\";\r\n\r\nimport styles from \"./index.module.css\";\r\n\r\nimport MemeText from \"./MemeText\";\r\nimport MemeImage from \"./MemeImage\";\r\n\r\nexport default React.forwardRef(({ image, className }, ref) => {\r\n  const { memeTexts, space } = useContext(MemeTextsContext);\r\n\r\n  const MemeTexts = memeTexts.map((element, i) => (\r\n    <MemeText key={i} element={element} />\r\n  ));\r\n\r\n  const padTop = {\r\n    paddingTop: space.top + \"px\",\r\n    backgroundColor: space.topColor,\r\n  };\r\n  const padBottom = {\r\n    paddingBottom: space.bottom + \"px\",\r\n    backgroundColor: space.bottomColor,\r\n  };\r\n\r\n  return (\r\n    <div ref={ref} className={styles.meme + \" \" + className}>\r\n      <div style={padTop}></div>\r\n      <MemeImage image={image}> {MemeTexts}</MemeImage>\r\n      <div style={padBottom}></div>\r\n    </div>\r\n  );\r\n});\r\n\r\n/*Forward ref makes it possible to forward the ref to the component*/\r\n","import React, { useContext } from \"react\";\r\n\r\nimport styles from \"./memeOptions.module.css\";\r\n\r\nimport { MemeTextsContext } from \"../index\";\r\n\r\nexport default ({ memeText }) => {\r\n  const { reduceMemeTexts } = useContext(MemeTextsContext);\r\n\r\n  const headline = (memeText && memeText.text) || \"no text selected\";\r\n  const removeMemeText =\r\n    memeText &&\r\n    (() => reduceMemeTexts({ type: \"removeText\", id: memeText.id }));\r\n\r\n  const onPropChange =\r\n    (memeText &&\r\n      ((propName) => (e) =>\r\n        reduceMemeTexts({\r\n          type: \"changeTextStyle\",\r\n          id: memeText.id,\r\n          prop: propName,\r\n          value: e.target.value,\r\n        }))) ||\r\n    (() => {});\r\n  return (\r\n    <div className={memeText ? \"\" : styles.opacity}>\r\n      <div>\r\n        <h5 className={styles.headline}>\r\n          {headline}\r\n          <img\r\n            className={styles.removeButton}\r\n            src=\"/memeCreator/src/icon/remove.png\"\r\n            onClick={removeMemeText}\r\n            alt=\"remove\"\r\n          />\r\n        </h5>\r\n      </div>\r\n      <div>\r\n        Set css:\r\n        {[\r\n          \"color\",\r\n          \"backgroundColor\",\r\n          \"fontSize\",\r\n          \"transform\",\r\n          \"textTransform\",\r\n          \"fontFamily\",\r\n        ].map((propName, i) => (\r\n          <div key={i} className={styles.cssOption}>\r\n            <label htmlFor={i + \"propName\"}> {propName}</label>\r\n            <br />\r\n            <input\r\n              id={i + \"propName\"}\r\n              className={styles.cssOptionInput}\r\n              value={memeText && memeText.style[propName]}\r\n              onChange={onPropChange(propName)}\r\n            />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { MemeTextsContext } from \"../index\";\r\n\r\nimport styles from \"./memeOptions.module.css\";\r\n\r\nexport default ({ topOrBottom }) => {\r\n  const { space, setSpace } = useContext(MemeTextsContext);\r\n\r\n  const v = topOrBottom;\r\n  const vColor = topOrBottom + \"Color\";\r\n\r\n  const set = (property) => (e) => {\r\n    const s = { ...space };\r\n    s[property] = e.target.value;\r\n    setSpace(s);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.cssOption}>\r\n      Set {topOrBottom} padding\r\n      <br />\r\n      <input\r\n        type=\"range\"\r\n        min=\"0\"\r\n        max=\"100\"\r\n        value={space[v]}\r\n        onChange={set(v)}\r\n        className={styles.cssOptionInput}\r\n      />\r\n      <br />\r\n      color:\r\n      <br />\r\n      <input\r\n        className={styles.cssOptionInput}\r\n        type=\"text\"\r\n        value={space[vColor]}\r\n        onChange={set(vColor)}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import Options from \"./Options\";\r\n\r\nexport default Options;\r\n","import React, { useContext } from \"react\";\r\n\r\nimport styles from \"./index.module.css\";\r\n\r\nimport { MemeTextsContext } from \"../index\";\r\n\r\nimport MemeTextOptions from \"./MemeTextOptions\";\r\n\r\nimport PaddingOption from \"./PaddingOption\";\r\n\r\nexport default function Options({ setMemeName, memeName, className }) {\r\n  const { memeTexts } = useContext(MemeTextsContext);\r\n\r\n  const memeText = memeTexts.filter((x) => x.focus)[0];\r\n\r\n  return (\r\n    <div className={styles.options + \" \" + className}>\r\n      <label htmlFor=\"inp\"> Meme Name: </label>\r\n      <input\r\n        id=\"inp\"\r\n        type=\"text\"\r\n        value={memeName}\r\n        onChange={(e) => {\r\n          setMemeName(e.target.value);\r\n        }}\r\n      />\r\n      <PaddingOption topOrBottom={\"top\"} />\r\n      <div className={styles.memeTextsButtons}>\r\n        <MemeTextOptions memeText={memeText} />\r\n      </div>\r\n      <PaddingOption topOrBottom={\"bottom\"} />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\n\r\nimport useMemeTextsReducer from \"./MemeTextState\";\r\n\r\nimport styles from \"./index.module.css\";\r\n\r\nimport Meme from \"./Meme\";\r\n\r\nimport Options from \"./Options\";\r\n\r\nimport { getTotalLocation } from \"./calcPos\";\r\n\r\nimport { AuthContext } from \"context/Auth\";\r\n\r\nexport const MemeTextsContext = React.createContext([]);\r\n\r\nexport default React.forwardRef(\r\n  ({ image, setMemeName, memeName }, imageNodeRef) => {\r\n    const [memeTexts, reduceMemeTexts] = useMemeTextsReducer();\r\n\r\n    const offset = useUpdatedOffset(memeTexts, imageNodeRef);\r\n\r\n    useHandleUnAuthorized(memeTexts, reduceMemeTexts);\r\n\r\n    const [space, setSpace] = useState({\r\n      top: \"0\",\r\n      topColor: \"white\",\r\n      bottom: \"0\",\r\n      bottomColor: \"white\",\r\n    });\r\n\r\n    return (\r\n      <div className={styles.body}>\r\n        <MemeTextsContext.Provider\r\n          value={{\r\n            space,\r\n            setSpace,\r\n            memeTexts: memeTexts,\r\n            reduceMemeTexts,\r\n            offset,\r\n          }}\r\n        >\r\n          <div className={styles.secondFlex}>\r\n            <Meme ref={imageNodeRef} image={image} />\r\n          </div>\r\n          <Options\r\n            className={styles.fistFlex}\r\n            memeImageRef={imageNodeRef}\r\n            setMemeName={setMemeName}\r\n            memeName={memeName}\r\n          />\r\n        </MemeTextsContext.Provider>\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nconst useHandleUnAuthorized = (memeTexts, reduceMemeTexts) => {\r\n  const { authorized } = useContext(AuthContext);\r\n\r\n  useEffect(() => {\r\n    blockUnAuthorized();\r\n  }, [memeTexts]);\r\n\r\n  const blockUnAuthorized = () => {\r\n    if (!authorized && memeTexts.length) {\r\n      reduceMemeTexts({ type: \"removeText\", id: memeTexts[0].id });\r\n      alert(\"cant use pro version of meme editor without being logged in\");\r\n    }\r\n  };\r\n};\r\n\r\nconst useUpdatedOffset = (memeTexts, imageNodeRef) => {\r\n  const [offset, setOffSet] = useState({\r\n    totalOffsetLeft: 0,\r\n    totalOffsetTop: 0,\r\n  });\r\n\r\n  useEffect(() => {\r\n    recalcOffset();\r\n  }, [memeTexts]);\r\n\r\n  const recalcOffset = () => {\r\n    if (imageNodeRef.current) {\r\n      setOffSet(getTotalLocation(imageNodeRef.current));\r\n    }\r\n  };\r\n  return offset;\r\n};\r\n","import FreeStyle, { MemeTextsContext } from \"./FreeStyle\";\r\n\r\nexport default FreeStyle;\r\n\r\nexport { MemeTextsContext };\r\n","import domeToImage from \"dom-to-image\";\r\n\r\nfunction downloadImg(node, memeName) {\r\n  domeToImage\r\n    .toPng(node)\r\n    .then(function (dataUrl) {\r\n      downloadMeme(dataUrl, memeName);\r\n    })\r\n    .catch(function (error) {\r\n      console.error(\"oops, something went wrong!\", error);\r\n    });\r\n}\r\n\r\nfunction downloadMeme(dataUrl, name) {\r\n  var link = document.createElement(\"a\");\r\n  link.download = (name && name + \".jpg\") || \"meme.jpg\";\r\n  link.href = dataUrl;\r\n  link.click();\r\n}\r\n\r\nexport default downloadImg;\r\n","import React, { useState } from \"react\";\r\nimport styles from \"./index.module.css\";\r\nimport downloadImg from \"../downloadImg\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport FireBaseSignIn from \"components/FireBaseSignIn\";\r\n\r\nconst Nav = ({ imageNodeRef, getImage, memeName }) => {\r\n  const [goHome, setGoHome] = useState(false);\r\n\r\n  return (\r\n    <div className={styles.navContainer}>\r\n      {goHome && <Redirect to=\"/memeCreator/\"></Redirect>}\r\n      <button className={styles.navButton} onClick={() => setGoHome(!goHome)}>\r\n        Home\r\n      </button>\r\n      <button className={styles.navButton}>\r\n        <label htmlFor=\"files\">Upload an Image</label>\r\n      </button>\r\n      <input\r\n        id=\"files\"\r\n        type=\"file\"\r\n        name=\"load image\"\r\n        accept=\"image/png, image/jpeg\"\r\n        onChange={getImage}\r\n        style={{ display: \"none\" }}\r\n      />\r\n      <button\r\n        className={styles.navButton}\r\n        onClick={() => {\r\n          downloadImg(imageNodeRef.current, memeName);\r\n        }}\r\n      >\r\n        Download Meme\r\n      </button>\r\n      <FireBaseSignIn />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import { useState } from \"react\";\r\n\r\nconst angryImgSrc = \"/memeCreator/images/AngrySection.jpeg\";\r\n\r\nconst angryImg = new Image();\r\nangryImg.src = angryImgSrc;\r\n\r\nexport default () => {\r\n  const [image, setImage] = useState(angryImg);\r\n\r\n  const resizeImg = (img) => {\r\n    setTimeout(() => {\r\n      img = resize(img);\r\n      setTimeout(() => {\r\n        setImage(img);\r\n      }, 0);\r\n    });\r\n  };\r\n\r\n  const getImage = (e) => {\r\n    const reader = new FileReader();\r\n    reader.onload = (e) => {\r\n      const img = new Image();\r\n      img.src = e.target.result;\r\n      resizeImg(img);\r\n    };\r\n    reader.readAsDataURL(e.target.files[0]);\r\n  };\r\n  return { image, getImage, setImage, resizeImg };\r\n};\r\n\r\nexport const resize = (img, MAX) => {\r\n  const MAX_SIZE = MAX || 500;\r\n  if (img.height > MAX_SIZE || img.width > MAX_SIZE) {\r\n    const ratio = img.height / img.width;\r\n\r\n    if (img.height > img.width) {\r\n      img.height = MAX_SIZE;\r\n      img.width = MAX_SIZE / ratio;\r\n    } else {\r\n      img.width = MAX_SIZE;\r\n      img.height = MAX_SIZE * ratio;\r\n    }\r\n  }\r\n\r\n  return img;\r\n};\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\n\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport styles from \"./index.module.css\";\r\n\r\nimport TextImage from \"./TextImage\";\r\n\r\nimport FreeStyle from \"./FreeStyle\";\r\n\r\nimport Nav from \"./Nav\";\r\n\r\nimport useImage, { resize } from \"./useImage\";\r\n\r\nconst MemeEditor = () => {\r\n  const { image, getImage, resizeImg } = useImage();\r\n  const { memeType } = useParams();\r\n\r\n  const [memeName, setMemeName] = useState(\"meme\");\r\n\r\n  const handleMemeSelector = (e) => {\r\n    resizeImg({\r\n      src: e.target.src,\r\n      height: e.target.height * 100,\r\n      width: e.target.width * 100,\r\n    });\r\n  };\r\n  const imageNodeRef = useRef();\r\n\r\n  document.title = \"Make Your Own Meme!\";\r\n\r\n  return (\r\n    <div className={styles.editor}>\r\n      <Nav\r\n        className={styles.nav}\r\n        imageNodeRef={imageNodeRef}\r\n        getImage={getImage}\r\n        memeName={memeName}\r\n      />\r\n\r\n      <DisplayImages handleMemeSelector={handleMemeSelector} />\r\n      <div className={styles.bodyContainer}>\r\n        {(memeType === \"freestyle\" && (\r\n          <FreeStyle\r\n            ref={imageNodeRef}\r\n            setMemeName={setMemeName}\r\n            memeName={memeName}\r\n            image={image}\r\n          />\r\n        )) || (\r\n          <TextImage\r\n            ref={imageNodeRef}\r\n            setMemeName={setMemeName}\r\n            memeName={memeName}\r\n            image={image}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst DisplayImages = ({ handleMemeSelector }) => {\r\n  const [memeImages, setMemeImages] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(\" https://api.imgflip.com/get_memes\")\r\n      .then((response) => response.json())\r\n      .then((result) => {\r\n        setTimeout(() => {\r\n          const images = result.data.memes.map((x) => {\r\n            const img = new Image();\r\n            img.src = x.url;\r\n            return resize(img, 100);\r\n          });\r\n\r\n          setMemeImages(images);\r\n        }, 0);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  const images = memeImages.map((img, i) => (\r\n    <img\r\n      key={i}\r\n      className={styles.imgMeme}\r\n      onClick={handleMemeSelector}\r\n      src={img.src}\r\n      style={{\r\n        width: img.width + \"px\",\r\n        height: img.height + \"px\",\r\n      }}\r\n      alt=\"img\"\r\n    />\r\n  ));\r\n\r\n  return (\r\n    <div className={styles.egMemeContainer}>\r\n      <div className={styles.egMemeContainerChild}> {images}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MemeEditor;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\n\r\nimport IntroPage from \"components/IntroPage\";\r\nimport MemeEditor from \"components/MemeEditor\";\r\n\r\nimport { AuthContextProvider } from \"context/Auth\";\r\n\r\nfunction App() {\r\n  return (\r\n    <AuthContextProvider>\r\n      <Router>\r\n        <Switch>\r\n          <Route path=\"/memeCreator/:memeType\">\r\n            <MemeEditor />\r\n          </Route>\r\n          <Route path=\"/memeCreator\">\r\n            <IntroPage />\r\n          </Route>\r\n          <Route path=\"*\">\r\n            <Redirect to=\"/memeCreator\"></Redirect>\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </AuthContextProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editor\":\"MemeEditor_editor__2BjEE\",\"nav\":\"MemeEditor_nav__2g9DJ\",\"bodyContainer\":\"MemeEditor_bodyContainer__3Uf20\",\"header\":\"MemeEditor_header__eMX6P\",\"egMemeContainer\":\"MemeEditor_egMemeContainer__3Q8rE\",\"egMemeContainerChild\":\"MemeEditor_egMemeContainerChild__zVxCf\",\"imgMeme\":\"MemeEditor_imgMeme__1yGOA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"signInContainer\":\"FireBaseSignIn_signInContainer__nwEZE\",\"body\":\"FireBaseSignIn_body__1VlKH\",\"icon\":\"FireBaseSignIn_icon__3hzhW\",\"iconButton\":\"FireBaseSignIn_iconButton__3mxlz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navContainer\":\"Nav_navContainer__2DiNd\",\"navButton\":\"Nav_navButton__3Jmjx\",\"glowing\":\"Nav_glowing__1oXh-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bodyContainer\":\"ColorPicker_bodyContainer__3T7Ny\",\"Button\":\"ColorPicker_Button__cSZSI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bodyContainer\":\"FreeStyle_bodyContainer__2ikDo\",\"fistFlex\":\"FreeStyle_fistFlex__3ZhOQ\",\"secondFlex\":\"FreeStyle_secondFlex__jV0QO\",\"body\":\"FreeStyle_body__2ZB-l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bodyContainer\":\"TextImage_bodyContainer__2eZhu\",\"memeContainer\":\"TextImage_memeContainer__1VIBd\",\"memeImage\":\"TextImage_memeImage__3Xo2G\",\"fontStyleContainer\":\"TextImage_fontStyleContainer__2pW-U\",\"textBottom\":\"TextImage_textBottom__33Coj\",\"textTop\":\"TextImage_textTop__1T53J\",\"options\":\"TextImage_options__21MDm\",\"styleOptions\":\"TextImage_styleOptions__3K-AI\",\"Button\":\"TextImage_Button__2jUhz\",\"inp\":\"TextImage_inp__1EQ_5\",\"label\":\"TextImage_label__25c6R\",\"focusBg\":\"TextImage_focusBg__3JZZE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"options\":\"Options_options__3L89k\"};"],"sourceRoot":""}