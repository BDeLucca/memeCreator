{"version":3,"sources":["components/MemeEditor/TextImage/ColorPicker/index.module.css","components/MemeEditor/FreeStyleMeme/index.module.css","components/MemeEditor/TextImage/FontButtons/index.module.css","components/MemeTypes/index.module.css","components/IntroPage/index.js","components/MemeEditor/downloadImg.js","components/MemeEditor/useImage.js","components/MemeEditor/TextImage/FontButtons/index.js","components/MemeEditor/TextImage/ColorPicker/index.js","components/MemeEditor/TextImage/index.js","components/MemeEditor/FreeStyleMeme/Meme/index.js","components/MemeEditor/FreeStyleMeme/Options/index.js","components/MemeEditor/FreeStyleMeme/index.js","components/MemeEditor/index.js","components/MemeTypes/index.js","App.js","serviceWorker.js","index.js","components/IntroPage/intropage.module.css","components/MemeEditor/TextImage/index.module.css","components/MemeEditor/index.module.css","components/MemeEditor/FreeStyleMeme/Options/index.module.css"],"names":["module","exports","className","styles","component","to","Link","imgContainer","src","alt","downloadImg","node","domeToImage","toPng","then","dataUrl","link","document","createElement","download","href","click","downloadMeme","catch","error","console","useState","image","setImage","resizeImg","img","setTimeout","height","width","ratio","Image","useEffect","e","reader","FileReader","onload","target","result","readAsDataURL","files","FontButtons","props","styleOptions","fontButtonContainer","Button","onClick","setFont","style","fontFamily","fontSize","sizeButtons","setSize","letterSize","ColorPicker","showColorPicker","setShowColorPicker","color","currentColor","onChange","updatedColor","setColor","hex","text","inner","topText","setTopText","bottomText","setBottomText","useImage","getImage","fontText","setFontText","setFontSize","textColor","setTextColor","getInnerStyle","font","SizeOfFont","display","getOuterStyle","backgroundColor","bodyContainer","memeContainer","textTop","textBottom","options","htmlFor","inp","id","type","value","label","focusBg","querySelector","memeImage","name","accept","visibility","MemeImage","children","backgroundImage","position","backgroundRepeat","backgroundSize","React","forwardRef","ref","onImageClick","getSetText","changeMemeTextPosition","memeTexts","useContext","MemeTextsContext","focus","useRefToFocus","MemeTexts","map","element","i","MemeText","key","onDrag","calcPos","setText","arr","lastInput","useRef","current","draggable","onDragEnd","length","left","clientX","parentNode","offsetLeft","top","clientY","offsetTop","log","Options","meme","changeMemeTextStyle","removeMemeText","memeTextsButtons","v","MemeTextOptions","hide","setHide","createContext","setMemeTexts","memeImageRef","Provider","Meme","newMemeText","getNewMemeText","index","newPos","JSON","parse","stringify","slice","prop","new_MemeText","zIndex","borderColor","memeType","useParams","editor","header","FreeStyleMeme","TextImage","typeContainer","linkMemeTypes","memeTypesImg","App","path","MemeEditor","MemeTypes","IntroPage","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.bdf91f39.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"ColorPicker_Button__cSZSI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bodyContainer\":\"FreeStyleMeme_bodyContainer__eWctY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"styleOptions\":\"FontButtons_styleOptions__3giQ8\",\"fontButtonContainer\":\"FontButtons_fontButtonContainer__1e5e0\",\"sizeButtons\":\"FontButtons_sizeButtons__3xlc_\",\"Button\":\"FontButtons_Button__2q4u4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"MemeTypes_component__WwhWK\",\"typeContainer\":\"MemeTypes_typeContainer__5-495\",\"linkMemeTypes\":\"MemeTypes_linkMemeTypes__2Tc2p\",\"memeTypesImg\":\"MemeTypes_memeTypesImg__3d3so\"};","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styles from \"./intropage.module.css\";\r\n\r\nexport default () => {\r\n  return (\r\n    <div className={styles.component}>\r\n      <br />\r\n      <nav>\r\n        <button>Categories</button>\r\n        <button>Sign In</button>{\" \"}\r\n      </nav>\r\n      <br />\r\n      <h1>Welcome to the Meme creator</h1>\r\n      <br />\r\n      <Link to=\"/memeCreator/memetypes\" className={styles.Link}>\r\n        Get Started\r\n      </Link>\r\n      <br />\r\n      <div className={styles.imgContainer}>\r\n        <img src=\"https://picsum.photos/200\" alt=\"img1\"></img>\r\n        <img src=\"https://picsum.photos/200\" alt=\"img2\"></img>\r\n        <img src=\"https://picsum.photos/200\" alt=\"img3\"></img>\r\n        <img src=\"https://picsum.photos/200\" alt=\"img4\"></img>\r\n        <img src=\"https://picsum.photos/200\" alt=\"img5\"></img>\r\n        <img src=\"https://picsum.photos/200\" alt=\"img6\"></img>\r\n        <img src=\"https://picsum.photos/200\" alt=\"img7\"></img>\r\n        <img src=\"https://picsum.photos/200\" alt=\"img8\"></img>\r\n        <img src=\"https://picsum.photos/200\" alt=\"img9\"></img>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import domeToImage from \"dom-to-image\";\r\n\r\nfunction downloadImg(node) {\r\n  domeToImage\r\n    .toPng(node)\r\n    .then(function (dataUrl) {\r\n      downloadMeme(dataUrl);\r\n    })\r\n    .catch(function (error) {\r\n      console.error(\"oops, something went wrong!\", error);\r\n    });\r\n}\r\n\r\nfunction downloadMeme(dataUrl) {\r\n  var link = document.createElement(\"a\");\r\n  link.download = \"meme.jpg\";\r\n  link.href = dataUrl;\r\n  link.click();\r\n}\r\n\r\nexport default downloadImg;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nexport default () => {\r\n  const [image, setImage] = useState({ src: \"\" });\r\n\r\n  const angryImg = \"/memeCreator/images/AngrySection.jpeg\";\r\n\r\n  const resizeImg = (img) => {\r\n    setTimeout(() => {\r\n      const MAX_SIZE = 500;\r\n      if (img.height > MAX_SIZE || img.width > MAX_SIZE) {\r\n        const ratio = img.height / img.width;\r\n\r\n        if (img.height > img.width) {\r\n          img.height = MAX_SIZE;\r\n          img.width = MAX_SIZE / ratio;\r\n        } else {\r\n          img.width = MAX_SIZE;\r\n          img.height = MAX_SIZE * ratio;\r\n        }\r\n      }\r\n      setTimeout(() => {\r\n        setImage(img);\r\n      }, 0);\r\n    });\r\n  };\r\n\r\n  const img = new Image();\r\n  img.src = angryImg;\r\n\r\n  useEffect(() => {\r\n    resizeImg(img);\r\n  }, []);\r\n\r\n  const getImage = (e) => {\r\n    const reader = new FileReader();\r\n    reader.onload = (e) => {\r\n      const img = new Image();\r\n\r\n      img.src = e.target.result;\r\n      resizeImg(img);\r\n    };\r\n    reader.readAsDataURL(e.target.files[0]);\r\n  };\r\n  return [image, getImage];\r\n};\r\n","import React from \"react\";\r\n\r\nimport styles from \"./index.module.css\";\r\n\r\nconst FontButtons = (props) => {\r\n  return (\r\n    <div className={styles.styleOptions}>\r\n      {/* Buttons for the Font family */}\r\n      <div className={styles.fontButtonContainer}>\r\n        <button\r\n          className={styles.Button}\r\n          onClick={() => props.setFont(\"Georgia, serif\")}\r\n          style={{\r\n            fontFamily: \"Georgia, serif\",\r\n            fontSize: 15 + \"px\",\r\n          }}\r\n        >\r\n          Georgia\r\n        </button>\r\n        <button\r\n          className={styles.Button}\r\n          onClick={() => props.setFont(\"Arial Black\")}\r\n          style={{ fontFamily: \"Arial Black\", fontSize: 13 + \"px\" }}\r\n        >\r\n          Arial Black\r\n        </button>\r\n        <button\r\n          className={styles.Button}\r\n          onClick={() => props.setFont(\"monospace\")}\r\n          style={{ fontFamily: \"monospace\" }}\r\n        >\r\n          Monospace\r\n        </button>\r\n        <button\r\n          className={styles.Button}\r\n          onClick={() => props.setFont(\"Comic Sans MS\")}\r\n          style={{ fontFamily: \"Comic Sans MS\" }}\r\n        >\r\n          Comic Sans\r\n        </button>\r\n        <button\r\n          className={styles.Button}\r\n          onClick={() => props.setFont(\"cursive\")}\r\n          style={{ fontFamily: \"cursive\" }}\r\n        >\r\n          Cursive\r\n        </button>\r\n      </div>\r\n\r\n      {/* Buttons for the size */}\r\n      <div className={styles.sizeButtons}>\r\n        <button\r\n          className={styles.Button}\r\n          onClick={() => props.setSize(props.letterSize + 1)}\r\n          style={{ fontSize: \"15px\" }}\r\n        >\r\n          A+\r\n        </button>\r\n        <button\r\n          className={styles.Button}\r\n          onClick={() => props.setSize(props.letterSize - 1)}\r\n          style={{ fontSize: \"10px\" }}\r\n        >\r\n          A-\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FontButtons;\r\n","import React, { useState } from \"react\";\r\nimport { ChromePicker } from \"react-color\";\r\nimport styles from \"./index.module.css\";\r\n\r\nconst ColorPicker = (props) => {\r\n  const [showColorPicker, setShowColorPicker] = useState(false);\r\n  return (\r\n    <div>\r\n      <button\r\n        className={styles.Button}\r\n        onClick={() =>\r\n          setShowColorPicker((showColorPicker) => !showColorPicker)\r\n        }\r\n      >\r\n        {showColorPicker ? \"Close\" : \"Text Color\"}\r\n      </button>\r\n      {showColorPicker && (\r\n        <ChromePicker\r\n          color={props.currentColor}\r\n          onChange={(updatedColor) => props.setColor(updatedColor.hex)}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ColorPicker;\r\n","import React, { useState } from \"react\";\r\n\r\nimport styles from \"./index.module.css\";\r\n\r\nimport downloadImg from \"../downloadImg\";\r\n\r\nimport useImage from \"../useImage\";\r\n\r\nimport FontButtons from \"./FontButtons\";\r\n\r\nimport ColorPicker from \"./ColorPicker\";\r\n\r\nexport default ({}) => {\r\n  const [topText, setTopText] = useState({ text: \"top text\", inner: true });\r\n  const [bottomText, setBottomText] = useState({\r\n    text: \"bottom text\",\r\n    inner: true,\r\n  });\r\n\r\n  const [image, getImage] = useImage();\r\n\r\n  const [fontText, setFontText] = useState(\"\");\r\n\r\n  const [fontSize, setFontSize] = useState(12);\r\n\r\n  const [textColor, setTextColor] = useState(\"black\");\r\n\r\n  const getInnerStyle = (text, font, SizeOfFont) => {\r\n    return {\r\n      display: text.inner ? \"block\" : \"none\",\r\n      color: textColor,\r\n      fontFamily: font,\r\n      fontSize: SizeOfFont,\r\n    };\r\n  };\r\n  // Function that create the top text section\r\n  const getOuterStyle = (text, font, SizeOfFont) => {\r\n    return {\r\n      display: !text.inner ? \"block\" : \"none\",\r\n      color: textColor,\r\n      backgroundColor: text.inner ? \"transparent\" : \"white\",\r\n      fontFamily: font,\r\n      fontSize: SizeOfFont,\r\n    };\r\n  };\r\n\r\n  return (\r\n    <div className={styles.bodyContainer}>\r\n      <div\r\n        className={styles.memeContainer}\r\n        style={{\r\n          height: image.height + \"px\",\r\n          width: image.width + \"px\",\r\n        }}\r\n      >\r\n        <div\r\n          style={getOuterStyle(topText, fontText, fontSize)}\r\n          className={styles.textTop}\r\n        >\r\n          {topText.text}\r\n        </div>\r\n\r\n        <MemeImage image={image} onClick={() => {}}>\r\n          <div\r\n            style={getInnerStyle(topText, fontText, fontSize)}\r\n            className={styles.textTop}\r\n          >\r\n            {topText.text}\r\n          </div>\r\n          {/* This span prevents that the bottom text to go up when the top text is outside of the image */}\r\n          <span></span>\r\n\r\n          {/* Inside Bottom text */}\r\n          <div\r\n            style={getInnerStyle(bottomText, fontText, fontSize)}\r\n            className={styles.textBottom}\r\n          >\r\n            {bottomText.text}\r\n          </div>\r\n        </MemeImage>\r\n        <div\r\n          style={getOuterStyle(bottomText, fontText, fontSize)}\r\n          className={styles.textBottom}\r\n        >\r\n          {bottomText.text}\r\n        </div>\r\n      </div>\r\n      <div className={styles.options}>\r\n        {/* Text Input. Top and Bottom */}\r\n        <label htmlFor=\"inp\" className={styles.inp}>\r\n          <input\r\n            id=\"inp\"\r\n            type=\"text\"\r\n            value={topText.text}\r\n            onChange={(e) => {\r\n              setTopText({ ...topText, text: e.target.value });\r\n            }}\r\n          />\r\n          <span className={styles.label}>Top Text</span>\r\n          <span className={styles.focusBg}></span>\r\n        </label>\r\n        <label htmlFor=\"inp2\" className={styles.inp}>\r\n          <input\r\n            id=\"inp2\"\r\n            type=\"text\"\r\n            value={bottomText.text}\r\n            onChange={(e) => {\r\n              setBottomText({ ...bottomText, text: e.target.value });\r\n            }}\r\n          />\r\n          <span className={styles.label}>Bottom Text</span>\r\n          <span className={styles.focusBg}></span>\r\n        </label>\r\n\r\n        {/* Button to Change Top text position */}\r\n        <button\r\n          className={styles.Button}\r\n          onClick={() => setTopText({ ...topText, inner: !topText.inner })}\r\n        >\r\n          Top in/out\r\n        </button>\r\n\r\n        {/* Button to Change Bottom text position */}\r\n        <button\r\n          className={styles.Button}\r\n          onClick={() =>\r\n            setBottomText({ ...bottomText, inner: !bottomText.inner })\r\n          }\r\n        >\r\n          bottom in/out\r\n        </button>\r\n\r\n        <button\r\n          className={styles.Button}\r\n          onClick={() => {\r\n            const node = document.querySelector(\".\" + styles.memeImage);\r\n\r\n            downloadImg(node);\r\n          }}\r\n        >\r\n          Download Image\r\n        </button>\r\n        <label htmlFor=\"files\" className={styles.Button}>\r\n          Upload an Image\r\n        </label>\r\n        <input\r\n          id=\"files\"\r\n          type=\"file\"\r\n          name=\"load image\"\r\n          accept=\"image/png, image/jpeg\"\r\n          onChange={getImage}\r\n          style={{ visibility: \"hidden\" }}\r\n        />\r\n\r\n        <FontButtons\r\n          setFont={setFontText}\r\n          setSize={setFontSize}\r\n          letterSize={fontSize}\r\n        ></FontButtons>\r\n\r\n        <ColorPicker setColor={setTextColor} currentColor={textColor} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst MemeImage = ({ image, children }) => {\r\n  return (\r\n    <div\r\n      className={styles.memeImage}\r\n      style={{\r\n        backgroundImage: \"url(\" + image.src + \")\",\r\n        height: image.height + \"px\",\r\n        width: image.width + \"px\",\r\n        position: \"relative\",\r\n        backgroundRepeat: \"no-repeat\",\r\n        backgroundSize: \"contain\",\r\n      }}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useRef, useEffect, useContext } from \"react\";\r\n\r\nimport { MemeTextsContext } from \"../index\";\r\n\r\nexport default React.forwardRef(\r\n  ({ onImageClick, image, getSetText, changeMemeTextPosition }, ref) => {\r\n    const memeTexts = useContext(MemeTextsContext);\r\n    const focus = useRefToFocus([memeTexts]);\r\n\r\n    const MemeTexts = memeTexts.map((element, i) => (\r\n      <MemeText\r\n        key={i}\r\n        onDrag={(e) => changeMemeTextPosition(i, calcPos(e))}\r\n        style={element.style}\r\n        text={element.text}\r\n        setText={getSetText(i)}\r\n        changeMemeTextPosition={changeMemeTextPosition}\r\n        ref={element.focus ? focus : null}\r\n      />\r\n    ));\r\n\r\n    return (\r\n      <div ref={ref}>\r\n        <MemeImage image={image} onClick={onImageClick}>\r\n          {MemeTexts}\r\n        </MemeImage>\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nconst MemeImage = ({ image, onClick, children }) => (\r\n  <div\r\n    style={{\r\n      backgroundImage: \"url(\" + image.src + \")\",\r\n      height: image.height + \"px\",\r\n      width: image.width + \"px\",\r\n      position: \"relative\",\r\n      backgroundRepeat: \"no-repeat\",\r\n      backgroundSize: \"contain\",\r\n    }}\r\n  >\r\n    <div\r\n      onClick={onClick}\r\n      style={{ width: \"inherit\", height: \"inherit\" }}\r\n    ></div>\r\n    {children}\r\n  </div>\r\n);\r\n\r\nconst useRefToFocus = (arr) => {\r\n  const lastInput = useRef();\r\n\r\n  useEffect(() => {\r\n    if (lastInput.current) lastInput.current.focus();\r\n  }, arr);\r\n  return lastInput;\r\n};\r\n\r\n/*Forward ref makes it possible to forward the ref to the component*/\r\nconst MemeText = React.forwardRef(({ onDrag, style, text, setText }, ref) => {\r\n  return (\r\n    <input\r\n      draggable=\"true\"\r\n      onDragEnd={onDrag}\r\n      onDrag={onDrag}\r\n      type=\"text\"\r\n      onChange={(e) => {\r\n        e.target.style.width = e.target.value.length - 1 + \"ch\";\r\n        setText(e.target.value);\r\n      }}\r\n      value={text}\r\n      style={style}\r\n      ref={ref}\r\n    />\r\n  );\r\n});\r\n\r\nconst calcPos = (e) => {\r\n  const x = e.clientX - e.target.parentNode.offsetLeft;\r\n  const y = e.clientY - e.target.parentNode.offsetTop;\r\n  const left = x + \"px\";\r\n  const top = y + \"px\";\r\n  console.log(\"client: \" + e.clientX);\r\n\r\n  console.log(\"offset: \" + e.target.parentNode.offsetLeft);\r\n  console.log(\"left: \" + left);\r\n  console.log(\"top: \" + top);\r\n\r\n  return { left, top };\r\n};\r\n","import React, { useContext, useState } from \"react\";\r\n\r\nimport styles from \"./index.module.css\";\r\n\r\nimport downloadImg from \"../../downloadImg\";\r\n\r\nimport { MemeTextsContext } from \"../index\";\r\n\r\nexport default function Options({\r\n  meme,\r\n  getImage,\r\n  changeMemeTextStyle,\r\n  removeMemeText,\r\n}) {\r\n  const memeTexts = useContext(MemeTextsContext);\r\n  return (\r\n    <div className={styles.options}>\r\n      <button className=\"download\" onClick={(e) => downloadImg(meme.current)}>\r\n        Download Image\r\n      </button>\r\n      <input\r\n        id=\"files\"\r\n        type=\"file\"\r\n        name=\"load image\"\r\n        accept=\"image/png, image/jpeg\"\r\n        onChange={getImage}\r\n      />\r\n      <div className={styles.memeTextsButtons}>\r\n        {memeTexts.map((v, i) => (\r\n          <MemeTextOptions\r\n            key={i}\r\n            v={v}\r\n            i={i}\r\n            removeMemeText={removeMemeText}\r\n            changeMemeTextStyle={changeMemeTextStyle}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst MemeTextOptions = ({ v, removeMemeText, changeMemeTextStyle, i }) => {\r\n  const [hide, setHide] = useState(true);\r\n\r\n  return (\r\n    <div>\r\n      <h5 onClick={(e) => setHide(!hide)}> {v.text}</h5>\r\n      <div style={{ display: hide ? \"none\" : \"block\" }}>\r\n        <button onClick={() => removeMemeText(i)}>Remove</button>\r\n        <br className=\"\" />\r\n        <label htmlFor={i + \"color\"}>Set css color</label>\r\n        <input\r\n          id={i + \"color\"}\r\n          value={v.style.color}\r\n          onChange={(e) => changeMemeTextStyle(i, \"color\", e.target.value)}\r\n        />\r\n        <br className=\"\" />\r\n        <label htmlFor={i + \"backgroundColor\"}>Set css backgroundColor</label>\r\n        <input\r\n          id={i + \"backgroundColor\"}\r\n          value={v.style.backgroundColor}\r\n          onChange={(e) =>\r\n            changeMemeTextStyle(i, \"backgroundColor\", e.target.value)\r\n          }\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useRef, useContext } from \"react\";\r\n\r\nimport styles from \"./index.module.css\";\r\n\r\nimport Meme from \"./Meme\";\r\n\r\nimport useImage from \"../useImage\";\r\n\r\nimport Options from \"./Options\";\r\n\r\nexport const MemeTextsContext = React.createContext([]);\r\n\r\nexport default () => {\r\n  const [memeTexts, setMemeTexts] = useState([]);\r\n\r\n  const [image, getImage] = useImage();\r\n\r\n  const addTextOnClick = (e) => {\r\n    const newMemeText = getNewMemeText(e);\r\n    setMemeTexts([\r\n      ...memeTexts.map((v) => ({ ...v, focus: false })),\r\n      newMemeText,\r\n    ]);\r\n  };\r\n\r\n  //lol\r\n  const getSetMemeText = (index) => {\r\n    return (value) => {\r\n      const arr = memeTexts.map((v) => ({ ...v, focus: false }));\r\n      arr[index] = { ...memeTexts[index], text: value };\r\n      arr[index].focus = true;\r\n      setMemeTexts([...arr]);\r\n    };\r\n  };\r\n\r\n  const removeMemeText = (index) => {\r\n    setMemeTexts([...memeTexts.slice(0, index), ...memeTexts.slice(index + 1)]);\r\n  };\r\n\r\n  const changeMemeTextStyle = (index, prop, value) => {\r\n    const arr = memeTexts.map((v) => ({ ...v, focus: false }));\r\n    arr[index] = JSON.parse(JSON.stringify(arr[index]));\r\n    arr[index].style[prop] = value;\r\n    setMemeTexts([...arr]);\r\n  };\r\n\r\n  const changeMemeTextPosition = (index, newPos) => {\r\n    const arr = memeTexts.map((v) => ({ ...v, focus: false }));\r\n    arr[index] = JSON.parse(JSON.stringify(arr[index]));\r\n    arr[index].style.left = newPos.left;\r\n    arr[index].style.top = newPos.top;\r\n\r\n    setMemeTexts([...arr]);\r\n  };\r\n\r\n  const memeImageRef = useRef();\r\n\r\n  return (\r\n    <div className={styles.bodyContainer}>\r\n      <MemeTextsContext.Provider value={memeTexts}>\r\n        <Meme\r\n          ref={memeImageRef}\r\n          image={image}\r\n          onImageClick={addTextOnClick}\r\n          getSetText={getSetMemeText}\r\n          changeMemeTextPosition={changeMemeTextPosition}\r\n        />\r\n        <Options\r\n          memeImageRef={memeImageRef}\r\n          getImage={getImage}\r\n          removeMemeText={removeMemeText}\r\n          changeMemeTextStyle={changeMemeTextStyle}\r\n        />\r\n      </MemeTextsContext.Provider>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst getNewMemeText = (e) => {\r\n  const new_MemeText = {\r\n    text: \"text\",\r\n    style: {\r\n      display: \"block\",\r\n      position: \"absolute\",\r\n      zIndex: \"100\",\r\n      color: \"white\",\r\n      width: \"4ch\",\r\n      borderColor: \"transparent\",\r\n      backgroundColor: \"transparent\",\r\n      ...calcPos(e),\r\n    },\r\n    focus: true,\r\n  };\r\n\r\n  new_MemeText.style.color = \"green\";\r\n  return new_MemeText;\r\n};\r\n\r\nconst calcPos = (e) => {\r\n  const x = e.clientX - e.target.parentNode.offsetLeft;\r\n  const y = e.clientY - e.target.parentNode.offsetTop;\r\n  const left = x + \"px\";\r\n  const top = y + \"px\";\r\n  return { left, top };\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { useParams, useLocation } from \"react-router-dom\";\r\n\r\nimport domeToImage from \"dom-to-image\";\r\n\r\nimport styles from \"./index.module.css\";\r\n\r\nimport TextImage from \"./TextImage\";\r\n\r\nimport FreeStyleMeme from \"./FreeStyleMeme\";\r\n\r\nexport default () => {\r\n  const { memeType } = useParams();\r\n  // freestyle === FreeStyleMeme and rest can be TextImage\r\n\r\n  return (\r\n    <div className={styles.editor}>\r\n      <div className={styles.header}>\r\n        <h3>Make Your Own Meme! </h3>\r\n      </div>\r\n      {memeType === \"freestyle\" && <FreeStyleMeme />}\r\n      {memeType !== \"freestyle\" && <TextImage />}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport styles from \"./index.module.css\";\r\n\r\nexport default () => {\r\n  return (\r\n    <div className={styles.component}>\r\n      <nav>\r\n        <button>Categories</button>\r\n        <button>Sign In</button>{\" \"}\r\n      </nav>\r\n      <h2>This is the memetypes page</h2>\r\n      <br />\r\n      <div className={styles.typeContainer}>\r\n        <Link\r\n          className={styles.linkMemeTypes}\r\n          to=\"/memeCreator/memetypes/textInOfImage\"\r\n        >\r\n          Text in image\r\n          <img\r\n            className={styles.memeTypesImg}\r\n            src=\"https://i.picsum.photos/id/1011/5472/3648.jpg?hmac=Koo9845x2akkVzVFX3xxAc9BCkeGYA9VRVfLE4f0Zzk\"\r\n            alt=\"funny\"\r\n          ></img>\r\n        </Link>\r\n        <Link\r\n          className={styles.linkMemeTypes}\r\n          to=\"/memeCreator/memetypes/freestyle\"\r\n        >\r\n          <h3>Editor 2</h3>\r\n          <img\r\n            className={styles.memeTypesImg}\r\n            src=\"https://i.picsum.photos/id/1011/5472/3648.jpg?hmac=Koo9845x2akkVzVFX3xxAc9BCkeGYA9VRVfLE4f0Zzk\"\r\n            alt=\"serious\"\r\n          ></img>\r\n        </Link>\r\n        <Link\r\n          className={styles.linkMemeTypes}\r\n          to=\"/memeCreator/memetypes/angry\"\r\n        >\r\n          Memetype angry\r\n          <img\r\n            className={styles.memeTypesImg}\r\n            src=\"https://i.picsum.photos/id/1011/5472/3648.jpg?hmac=Koo9845x2akkVzVFX3xxAc9BCkeGYA9VRVfLE4f0Zzk\"\r\n            alt=\"angry\"\r\n          ></img>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\n\r\nimport IntroPage from \"./components/IntroPage\";\r\nimport MemeEditor from \"./components/MemeEditor\";\r\n\r\nimport MemeTypes from \"./components/MemeTypes\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route path=\"/memeCreator/memetypes/:memeType\">\r\n          <MemeEditor />\r\n        </Route>\r\n        <Route path=\"/memeCreator/memetypes\">\r\n          <MemeTypes />\r\n        </Route>\r\n        <Route path=\"/memeCreator\">\r\n          <IntroPage />\r\n        </Route>\r\n        <Route path=\"/\"></Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"intropage_component__2Eph7\",\"Link\":\"intropage_Link__N71EU\",\"imgContainer\":\"intropage_imgContainer__1SqrB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bodyContainer\":\"TextImage_bodyContainer__2eZhu\",\"meme\":\"TextImage_meme__3cy-E\",\"memeImage\":\"TextImage_memeImage__3Xo2G\",\"textBottom\":\"TextImage_textBottom__33Coj\",\"textTop\":\"TextImage_textTop__1T53J\",\"options\":\"TextImage_options__21MDm\",\"styleOptions\":\"TextImage_styleOptions__3K-AI\",\"Button\":\"TextImage_Button__2jUhz\",\"inp\":\"TextImage_inp__1EQ_5\",\"label\":\"TextImage_label__25c6R\",\"focusBg\":\"TextImage_focusBg__3JZZE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editor\":\"MemeEditor_editor__2BjEE\",\"header\":\"MemeEditor_header__eMX6P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"options\":\"Options_options__5q3gg\",\"memeTextsButtons\":\"Options_memeTextsButtons__1PBIs\"};"],"sourceRoot":""}